@use '../common/' as c;
@use 'sass:map';

$navbarOptions: (
  'default': (
    'overflow': hidden,
    'background-color': c.$blue-600,
    '.ae.navlinks': (
      'display': flex,
      'margin': 0,
      'padding': 0,
      'overflow': hidden,
      '& li': (
        'display': inline-block,
      ),
      '.ae.navlink': (
        'display': inline-block,
        'text-align': center,
        'text-decoration': none,
        '&:hover': (
          'background-color': c.$blue-700,
        ),
        '.ae.typography': (
          'padding': 1rem,
          'color': c.$white,
        ),
      ),
      '.ae.nav-dropdown': (
        '.ae.nav-dropdown-content': (
          'position': absolute,
          'display': none,
          'min-width': 160px,
          'z-index': 1,
          '.ae.navlink': (
            'box-shadow': c.$box-shadow-1,
            'background-color': c.$blue-100,
            'text-align': left,
            'display': block,
            '&:hover': (
              'background-color': c.$blue-200,
            ),
            '.ae.typography': (
              'color': c.$text-primary,
            ),
          ),
        ),
      ),
      '.ae.responsive-icon': (
        '.ae.navlink': (
          'display': none,
        ),
      ),
    ),
  ),
  'open': (
    '.ae.navlinks': (
      'position': relative,
      'flex-direction': column,
      '.ae.navlink': (
        'display': block,
      ),
      '.ae.responsive-icon': (
        'position': absolute,
        'right': 0,
        'background-color': c.$blue-700,
        '.ae.navlink': (
          'display': block,
        ),
      ),
    ),
  )
);

$navbarResponsiveOptions: (
  '.ae.navlinks': (
    '.ae.navlink': (
      'display': none,
    ),
    '.ae.responsive-icon': (
      '.ae.navlink': (
        'display': block,
      ),
    ),
    '.ae.nav-dropdown': (
      '.ae.nav-dropdown-content': (
        'position': relative,
        '.ae.navlink': (
          'box-shadow': none,
        ),
      ),
    ),
  ),
);

$navbarForceResponsiveOptions: (
    '.ae.navlinks': (
    '.ae.nav-dropdown': (
      '.ae.nav-dropdown-content': (
        'position': relative,
      ),
    ),
  ),
);

$navbarNonTouchScreen: (
    '.ae.navlinks': (
        '.ae.nav-dropdown:hover': (
            '.ae.dropdown-label': (
                'background-color': c.$blue-700,
            ),
            '.ae.nav-dropdown-content': (
                'display': block !important,
            ),
        ),
    )
    
);

$navbarTouchScreen: (
    'default': (
    '.ae.navlinks': (
            '.ae.nav-dropdown.open': (
                '.ae.dropdown-label': (
                    'background-color': c.$blue-700,
                ),
                '.ae.nav-dropdown-content': (
                    'display': block !important,
                ),
            ),
        ),
    ),
    'open': (
    '.ae.navlinks': (
        '.ae.nav-dropdown.open': (
                '.ae.nav-dropdown-content': (
                    'position': relative,
                ),
            ),
    ),
    ),
);




@mixin configure($options) {
    @if ($options) {
        @if (map.get($options, 'navbarOptions')) {
            $navbarOptions: map.get($options, 'navbarOptions') !global;
        }

        @if (map.get($options, 'navbarResponsiveOptions')) {
            $navbarResponsiveOptions: map.get( $options, 'navbarResponsiveOptions' ) !global;
        }

        @if (map.get($options, 'navbarNonTouchScreen')) {
            $navbarNonTouchScreen: map.get( $options, 'navbarNonTouchScreen' ) !global;
        }

        @if (map.get($options, 'navbarTouchScreen')) {
            $navbarTouchScreen: map.get( $options, 'navbarTouchScreen' ) !global;
        }
    }
}

@mixin styles {
  .ae.navbar {
    @include c.set-variations($navbarOptions);

    @media screen and (max-width: c.$desktop-width) {
      @include c.set-values($navbarResponsiveOptions);
    }
    // touch screens
    @media (pointer:coarse) {
        @include c.set-variations($navbarTouchScreen);
    }
    
    @media  (pointer:fine) {
        @include c.set-values($navbarNonTouchScreen);
    }

    &.force-responsive{
        @include c.set-values($navbarForceResponsiveOptions);
        &:not(.open) {
            @include c.set-values($navbarResponsiveOptions);
        }
    }
  }
}
