@*PageAlert.razor*@
@inject Blazored.LocalStorage.ILocalStorageService _localStorage

@if (!_hidePageAlert)
{
    <MudCard Class="mb-4">
        <MudCardHeader>
            <CardHeaderAvatar>
                <MudIcon Icon="@Icons.Material.Filled.Info" Color="Color.Primary" />
            </CardHeaderAvatar>
            <CardHeaderContent>
                <MudText Typo="Typo.h4">@Title</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Default" OnClick="HandlePageAlertClose" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            @ChildContent
        </MudCardContent>
    </MudCard>
}

@code {

    [Parameter]
    public string Title { get; set; }
    
    [Parameter]
    public string Key { get; set; }
    
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private bool _hidePageAlert = true;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            _hidePageAlert = await _localStorage.GetItemAsync<bool>(Key);
            StateHasChanged();
        }
    }
    
    private async Task HandlePageAlertClose()
    {
        _hidePageAlert = true;
        await _localStorage.SetItemAsync(Key, _hidePageAlert);
    }
}