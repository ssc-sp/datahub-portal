@using Datahub.Core.Data
@if (ChildContent != null)
{
    @ChildContent
}

@if (UploadingFiles != null && UploadingFiles.Any())
{
    <div class="upload-snackbar">
        @foreach (var file in UploadingFiles)
        {
            <div class="upload-snack">
                <i class="fas fa-file-alt"></i>
                <span class="upload-text">
                    <AeTypography class="snack-file-name">
                        @file.Filename
                    </AeTypography>
                    <AeTypography class="file-upload-bytes">
                        @UploadedByteSize(file.UploadedBytes)
                    </AeTypography>
                </span>
                <div class="snack-file-progress">
                    <div class="file-progress-bar" style="width: @CalculateProgress(file)%;">@CalculateProgress(file).ToString("0.00")%</div>
                </div>
            </div>
        }
    </div>
}

@code {
    
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    
    [Parameter]
    public List<FileMetaData> UploadingFiles { get; set; }

    private string UploadedByteSize(long size)
    {
        return ByteSizeLib.ByteSize.FromBytes(size).ToString();
    }

    private float CalculateProgress(FileMetaData file)
    {
        return file.BytesToUpload > 0 ? (float) file.UploadedBytes / file.BytesToUpload * 100F : -1F;
    }

}