@inject IJSRuntime _jsRuntime
@inject ILocalStorageService _localStorage

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <CascadingAuthenticationState>
            @if (routeData?.PageType.Namespace?.StartsWith(PublicPageNamespace) ?? false)
            {
                <RouteView RouteData="@routeData" DefaultLayout="typeof(PublicLayout)"/>
            }
            else
            {
                <AuthorizeRouteView Resource="@routeData" RouteData="@routeData" DefaultLayout="@typeof(PortalContainerLayout)"/>
            }
        </CascadingAuthenticationState>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(PortalLayout)">
                <MudContainer>
                    <MudText Typo="Typo.h2" Class="py-3">@Localizer["404-Page-error"]</MudText>
                    <MudText Typo="Typo.body1" Class="py-3">@Localizer["If you believe this is an error, please fill out a Support Request Form and we'll get right on it."]</MudText>
                    <MudText Typo="Typo.body1" Class="py-3">@Localizer["Otherwise, you can click the button below to return to the main page of DataHub."]</MudText>
                    <MudText Typo="Typo.body1" Class="py-3">@Localizer["We apologize for any inconvenience."]</MudText>
                    <DHButton Variant="Variant.Filled" Color="Color.Primary" Href="@Localizer[PageRoutes.Home]" Class="py-3">@Localizer["Back to DataHub"]</DHButton>
                    <br/>
                    @if (random.Next(0, 2) == 0)
                    {
                        <MudImage Src="img/errors/dogs/2288512261_31eedc8b0d_b.jpg" Alt="@Localizer["DogImageAltText"]" Elevation="25" Width="400" Class="rounded-lg my-5"/>
                    }
                    else
                    {
                        <MudImage Src="img/errors/cats/8369751532_e0596f5f8e_c.jpg" Alt="@Localizer["CatImageAltText"]" Elevation="25" Width="300" Class="rounded-lg my-5"/>
                    }
                </MudContainer>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>


@code {

    private const string InternalPublicPageNamespace = "Datahub.Portal.Pages.InternalPublic";
    private const string PublicPageNamespace = "Datahub.Portal.Pages.Public";
    Random random = new Random();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var module = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", "./App.razor.js");
            var language = await _localStorage.GetItemAsStringAsync("language");
            if (string.IsNullOrEmpty(language))
            {
                language = "en-CA";
                await _localStorage.SetItemAsStringAsync("language", language);
            }

            await module.InvokeVoidAsync("SetHtmlLangAttribute", language);
        }
    }


}