@* AzureConnectionDataInput.razor *@
@using Datahub.Infrastructure.Services.Storage;
@using static Datahub.Infrastructure.Services.Storage.CloudStorageHelpers;

<MudTextField @bind-Value="AccountName"
              Label=@Localizer["Storage Account Name"]
              Variant="Variant.Text"
              Adornment=@Adornment.End
              Immediate
              AdornmentIcon=@Icons.Material.Filled.ContentPaste />

<MudTextField @bind-Value="AccountKey"
              Label=@Localizer["Account Key"]
              Variant="Variant.Text"
              InputType="InputType.Password"
              Adornment=@Adornment.End
              Immediate
              AdornmentIcon=@Icons.Material.Filled.ContentPaste />



@code {

    [Parameter]
    public IDictionary<string, string> ConnectionData { get; set; }

    [Parameter]
    public EventCallback<bool> OnValidationChanged { get; set; }

    private bool IsValid => !(string.IsNullOrEmpty(AccountName) || string.IsNullOrEmpty(AccountKey));

    private string AccountName
    {
        get => ConnectionData[AZAccountName];
        set
        {
            ConnectionData[AZAccountName] = value;
            Validate();
        }
    }

    private string AccountKey
    {
        get => ConnectionData[AZAccountKey];
        set
        {
            ConnectionData[AZAccountKey] = value;
            Validate();
        }
    }

    private void Validate()
    {
        if (OnValidationChanged.HasDelegate)
        {
            OnValidationChanged.InvokeAsync(IsValid);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (ConnectionData is null) throw new InvalidDataException($"ConnectionData is null.");

        Validate();
    }


}
