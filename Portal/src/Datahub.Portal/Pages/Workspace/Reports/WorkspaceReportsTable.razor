@if (_isLoading)
{
    <DHLoadingInitializer/>
    return;
}
<MudTable T="Report" Items="@_reports" Hover Striped Filter="@(FilterTable)">
    <ToolBarContent>
        <MudText Typo="Typo.h2">Reports for @WorkspaceAcronym</MudText>
        <MudSpacer/>
        <MudTextField @bind-Value="_searchString" Placeholder="@Localizer["Search"]" Adornment="Adornment.Start" AdornmentIcon="@SidebarIcons.Search" IconSize="Size.Medium"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>@Localizer["Generation date"]</MudTh>
        <MudTh>@Localizer["Generated by"]</MudTh>
        <MudTh>@Localizer["Coverage"]</MudTh>
        <MudTh>@Localizer["Report type"]</MudTh>
        <MudTh>@Localizer["Report name"]</MudTh>
        <MudTh>@Localizer["View report"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="@Localizer["Generation Date"]">@context.GenerationDate</MudTd>
        <MudTd DataLabel="@Localizer["Generated By"]">@context.GeneratedBy</MudTd>
        <MudTd DataLabel="@Localizer["Coverage"]">@(context.CoverageDates.Item1.ToString("yyyy-MM-dd") + Localizer[" to "] + context.CoverageDates.Item2.ToString("yyyy-MM-dd"))</MudTd>
        <MudTd DataLabel="@Localizer["Report Type"]">@context.ReportType</MudTd>
        <MudTd DataLabel="@Localizer["Report Name"]">@context.ReportName</MudTd>
        <MudTd DataLabel="@Localizer["View report"]">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Href="@context.ReportUrl">@Localizer["View"]</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>
<MudStack Style="margin-top: 30px">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h2">@Localizer["Generate a new report"]</MudText>
        <MudText Typo="Typo.body1">@Localizer["Fill in the selection options below to generate a new report. Once your report request is submitted, it may take a bit for the report to appear."]</MudText>
        <MudForm>
            <MudText>
                @Localizer["Enter a name to identify your report:"]
                <MudTextField T="string" InputType="InputType.Text" Label="@Localizer["Report name"]" Required></MudTextField>
            </MudText>
            <MudText Typo="Typo.body1">
                @Localizer["Select the timeframe for your report:"]
                <MudStack Row>
                    <MudSelect Label="@Localizer["Timeframe"]" @bind-Value="@_timeframe" FullWidth="false" Required>
                        <MudSelectItem Value="@Timeframe.Fiscal">@Localizer["Fiscal year"]</MudSelectItem>
                        <MudSelectItem Value="@Timeframe.Calendar">@Localizer["Calendar year"]</MudSelectItem>
                        <MudSelectItem Value="@Timeframe.Alltime">@Localizer["All-time"]</MudSelectItem>
                        <MudSelectItem Value="@Timeframe.Custom">@Localizer["Custom range"]</MudSelectItem>
                    </MudSelect>
                    @switch (_timeframe)
                    {
                        case Timeframe.Fiscal:
                            <MudSelect Label="@Localizer["Fiscal year"]" T="@FiscalYear" Required>
                                <MudSelectItem Value="@FiscalYear.FY2022_2023">2022-2023</MudSelectItem>
                                <MudSelectItem Value="@FiscalYear.FY2023_2024">2023-2024</MudSelectItem>
                            </MudSelect>
                            break;
                        case Timeframe.Calendar:
                            <MudSelect Label="@Localizer["Calendar year"]" T="@CalendarYear" Required>
                                <MudSelectItem Value="@CalendarYear.CY2022">2022</MudSelectItem>
                                <MudSelectItem Value="@CalendarYear.CY2023">2023</MudSelectItem>
                                <MudSelectItem Value="@CalendarYear.CY2024">2024</MudSelectItem>
                            </MudSelect>
                            break;
                        case Timeframe.Custom:
                            <MudDatePicker Label="@Localizer["Start date"]" Required></MudDatePicker>
                            <MudDatePicker Label="@Localizer["End date"]" Required></MudDatePicker>
                            break;
                    }
                </MudStack>
            </MudText>
            <MudText Typo="Typo.body1">
                @Localizer["Select the type of your report"]
                <MudSelect Label="@Localizer["Report type"]" T="@ReportType" Required>
                    <MudSelectItem Value="ReportType.Cost">Cost</MudSelectItem>
                    <MudSelectItem Value="ReportType.Storage">Storage</MudSelectItem>
                    <MudSelectItem Value="ReportType.CostAndStorage">Cost & Storage</MudSelectItem>
                </MudSelect>
            </MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-6">@Localizer["Submit"]</MudButton>
        </MudForm>
    </MudPaper>
</MudStack>


@code {
    [Parameter] public string WorkspaceAcronym { get; set; }
    private bool _isLoading = true;
    private List<Report> _reports { get; set; }
    private string _searchString = "";
    private Timeframe _timeframe = Timeframe.Fiscal;

    private enum Timeframe
    {
        Fiscal,
        Calendar,
        Alltime,
        Custom
    };

    private enum FiscalYear
    {
        FY2022_2023,
        FY2023_2024
    };

    private enum CalendarYear
    {
        CY2022,
        CY2023,
        CY2024
    };

    private enum ReportType
    {
        Cost,
        Storage,
        CostAndStorage
    }

    private record Report(DateTime GenerationDate, string GeneratedBy, (DateTime, DateTime) CoverageDates, string ReportType, string ReportName, string ReportUrl);

    protected override void OnInitialized()
    {
        _reports = new List<Report>();
        _reports.Add(new Report(DateTime.Now, "System generated", (DateTime.Now.AddDays(-365), DateTime.Now), "Cost", "myreport1", "https://www.google.com"));
        _reports.Add(new Report(DateTime.Now.AddDays(-10), "René, David (SSC/SPC)", (DateTime.Now.AddDays(-365), DateTime.Now.AddDays(-10)), "Cost & Storage", "myreport2", "https://www.google.com"));
        _reports.Add(new Report(DateTime.Now, "System generated", (DateTime.Now.AddDays(-365), DateTime.Now), "Storage", "myreport3", "https://www.google.com"));
        _isLoading = false;
    }

    private bool FilterTable(Report report) => FilterFunc(report, _searchString);

    private bool FilterFunc(Report element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.ReportName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ReportType.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.GeneratedBy.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

}