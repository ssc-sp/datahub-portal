@using Datahub.Application.Services
@using Datahub.Application.Services.UserManagement
@using Datahub.Core.Model.Projects
@using Datahub.Core.Services.Projects
@using Datahub.Portal.Pages.Account

@inject IDbContextFactory<DatahubProjectDBContext> _dbContextFactory
@inject IDatahubAuditingService _auditingService

@inject IUserInformationService _userInformationService
@inject IRequestManagementService _requestManagementService
@inject ISnackbar _snackbar


@if (_updateInProgress || _workspace is null)
{
    <DHLoadingInitializer/>
    return;
}

<MudStack Spacing="8" Class="mb-16">
    <MudStack Row Justify="Justify.SpaceBetween">
        <DHMainContentTitle Title="@Localizer["Workspace Settings"]"/>
        @if (HasChanged)
        {
            <MudStack Row AlignItems="AlignItems.Center">
                <MudElement>
                    <DHButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@_updateInProgress" OnClick="@SaveChanges">
                        @Localizer["Save Changes"]
                    </DHButton>
                </MudElement>
                <MudAlert Severity="Severity.Info">
                    <MudText Typo="Typo.body2">@_alertMessage</MudText>
                </MudAlert>
            </MudStack>
        }
    </MudStack>
    <DatahubAuthView AuthLevel="DatahubAuthView.AuthLevels.DatahubAdmin" ProjectAcronym="@WorkspaceAcronym">
        <Authorized>
            <MudStack>
                <WorkspacePreventAutoDeleteControl OnValueChanged="@HandlePreventAutoDeleteChange" InitialValue="@_preventAutoDelete"/>
                <WorkspaceBudgetControl OnValueChanged="@HandleBudgetChanged" InitialValue="@_budget"/>
                <WorkspaceDeleteControl />
            </MudStack>
        </Authorized>

        <NotAuthorized>
            <WorkspaceBudgetControl Disabled InitialValue="@_budget"/>
            <WorkspaceDeleteControl/>
        </NotAuthorized>
    </DatahubAuthView>
</MudStack>

@code {

    [Parameter] public string WorkspaceAcronym { get; set; }

    private Datahub_Project _workspace;

    private bool HasChanged => _preventAutoDelete != _workspace.PreventAutoDelete || _budget != _workspace.Project_Budget;
    private bool RequiresTerraformUpdate => _budget != _workspace.Project_Budget;

    private bool _updateInProgress;
    private bool _preventAutoDelete;
    private decimal _budget;

    private string _alertMessage => Localizer["You have unsaved changes. Please save them before leaving this page."];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await using var context = await _dbContextFactory.CreateDbContextAsync();
        _workspace = await context.Projects
            .AsNoTracking()
            .FirstAsync(p => p.Project_Acronym_CD == WorkspaceAcronym);

        SetFormPropertiesFromWorkspace();
    }

}