@using Datahub.Core.Model.Projects
@using Datahub.Metadata.DTO
@using Datahub.Portal.Pages.Workspace
@using Datahub.Portal.Pages.Workspace.Dashboard
@using Datahub.Portal.Pages.Workspace.Storage
@using Datahub.Portal.Pages.Workspace.Subpages

@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject IMetadataBrokerService _metadataBrokerService
@inject ILogger<WorkspacePage> _logger

@attribute [Route(PageRoutes.WorkspaceDefault)]
@attribute [Route(PageRoutes.Workspace)]

<SectionContent SectionName="side-bar">
    <WorkspaceSidebar WorkspaceAcronym="@WorkspaceAcronymParam"/>
</SectionContent>

<MudContainer MaxWidth="MaxWidth.Large">
    @{
        var containsKey = !string.IsNullOrWhiteSpace(Section) 
                          && _sectionComponents.ContainsKey(Section);
        var parameters = new Dictionary<string, object>
        {
            { "WorkspaceAcronym", WorkspaceAcronymParam }
        };

        if (containsKey)
        {
            <DynamicComponent Type="@_sectionComponents[Section]" Parameters="@parameters"/>
        }
        else
        {
            _logger.LogWarning("The section {Section} is not a valid section for the workspace page", Section);
            <WorkspaceDashboard WorkspaceAcronym="@WorkspaceAcronymParam"/>
        }
    }
</MudContainer>


@code {

    [Parameter]
    public string WorkspaceAcronymParam { get; set; }

    [Parameter]
    public string Section { get; set; } = WorkspaceSidebar.SectionViews.Dashboard;

    private Dictionary<string, Type> _sectionComponents = new()
    {
        
        { WorkspaceSidebar.SectionViews.Storage, typeof(FileExplorerPage) },
        
        { WorkspaceSidebar.SectionViews.Users, typeof(WorkspaceUsers) },
        { WorkspaceSidebar.SectionViews.Metadata, typeof(WorkspaceMetadata) },
        { WorkspaceSidebar.SectionViews.Marketplace, typeof(WorkspaceMarketplace) },
        { WorkspaceSidebar.SectionViews.Reports, typeof(WorkspaceReports) },
        { WorkspaceSidebar.SectionViews.Settings, typeof(WorkspaceSettings) },
        { WorkspaceSidebar.SectionViews.Dashboard, typeof(WorkspaceDashboard) }
    };

}