@using Datahub.Core.Model.Projects
@using Datahub.Metadata.DTO
@using Datahub.Portal.Pages.Workspace
@using Datahub.Portal.Pages.Workspace.Dashboard
@using Datahub.Portal.Pages.Workspace.Metadata
@using Datahub.Portal.Pages.Workspace.Reports
@using Datahub.Portal.Pages.Workspace.Repositories
@using Datahub.Portal.Pages.Workspace.Storage
@using Datahub.Portal.Pages.Workspace.Subpages
@using Datahub.Portal.Pages.Workspace.Sudo
@using Datahub.Portal.Pages.Workspace.Users

@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject IMetadataBrokerService _metadataBrokerService
@inject ILogger<WorkspacePage> _logger

@attribute [Route(PageRoutes.WorkspaceDefault)]
@attribute [Route(PageRoutes.Workspace)]

<PageTitle>
    @Localizer["SSC Datahub - Workspace - {0}", WorkspaceAcronymParam ?? ""]
</PageTitle>

<SectionContent SectionName="side-bar">
    <WorkspaceSidebar WorkspaceAcronym="@WorkspaceAcronymParam"/>
</SectionContent>

@{
    var containsKey = !string.IsNullOrWhiteSpace(Section)
                      && _sectionComponents.ContainsKey(Section);
    var parameters = new Dictionary<string, object>
    {
        { "WorkspaceAcronym", WorkspaceAcronymParam }
    };

    if (containsKey)
    {
        <DynamicComponent Type="@_sectionComponents[Section]" Parameters="@parameters"/>
    }
    else
    {
        _logger.LogWarning("The section {Section} is not a valid section for the workspace page", Section);
        <WorkspaceDashboard WorkspaceAcronym="@WorkspaceAcronymParam"/>
    }
}


@code {

    [Parameter]
    public string WorkspaceAcronymParam { get; set; }

    [Parameter]
    public string Section { get; set; } = WorkspaceSidebar.SectionViews.Dashboard;

    private Dictionary<string, Type> _sectionComponents = new()
    {
        { WorkspaceSidebar.SectionViews.Dashboard, typeof(WorkspaceDashboard) },
        { WorkspaceSidebar.SectionViews.Storage, typeof(FileExplorerPage) },
        { WorkspaceSidebar.SectionViews.Repositories, typeof(RepositoryManagementPage) },
        { WorkspaceSidebar.SectionViews.Users, typeof(WorkspaceUsersPage) },
        { WorkspaceSidebar.SectionViews.Metadata, typeof(WorkspaceMetadataPage) },
        { WorkspaceSidebar.SectionViews.Marketplace, typeof(WorkspaceMarketplace) },
        { WorkspaceSidebar.SectionViews.Reports, typeof(WorkspaceReports) },
        { WorkspaceSidebar.SectionViews.Sudo, typeof(WorkspaceSudoPage) },
        { WorkspaceSidebar.SectionViews.Settings, typeof(WorkspaceSettings) }
    };

}