@using Datahub.Core.Model.Projects

<MudSelect T="int" ValueChanged="RoleChanged" Variant="Variant.Outlined">
    @foreach (var role in _projectRoles)
    {
        <MudSelectItem Value="@(role.Id)" Class="@GetItemClass(role.Id)">
            <MudText Typo="Typo.h6">@Localizer[role.Name]</MudText>
            <MudText>@Localizer[role.Description]</MudText>
        </MudSelectItem>
    }
    <MudDivider />
</MudSelect>

@code {
    
    [Parameter] 
    public EventCallback<int> OnRoleChanged { get; set; }

    private string _valueOfSelect;
    private IEnumerable<Project_Role> _projectRoles;

    protected override void OnInitialized()
    {
        _projectRoles = Project_Role.GetAll();
    }

    private async Task RoleChanged(int newRoleId)
    {
        await OnRoleChanged.InvokeAsync(newRoleId);
    }

    private string GetItemClass(int roleId)
    {
        return roleId == (int) Project_Role.RoleNames.Remove ? "mud-selected-item mud-primary-text mud-primary-hover" : string.Empty;
    }
}