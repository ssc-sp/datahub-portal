@using Datahub.Portal.Pages.Project.DataProject.ProjectTools
@using Datahub.Core.Model.Datahub
@using Datahub.Core.Model.Projects
@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject UIControlsService _uiControlService;



<div class="project-info">
    <AuthorizeView Roles=@RoleConstants.DATAHUBROLEADMIN Context="Engagement_Card">
        <MudCard>
            @*<MudExpansionPanel IsExpanded="true" Dense="true" DisableGutters="true">*@
                @*<TitleContent>*@
                    <div class="d-flex">
                        <MudText Typo="Typo.h4">Client Engagements</MudText>
                    </div>
                @*</TitleContent>*@
                @*<ChildContent>*@
                    <MudCardContent>
                        @foreach (var engagement in _clientEngagements)
                        {
                            <MudText Typo="Typo.h6">@engagement.EngagementName</MudText>
                            <MudText Typo="Typo.caption">@engagement.EngagmentOwners</MudText>
                            <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Bottom">
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.RequirementsGatheringEndDate, engagement.RequirementsGatheringActualEndDate).Item1" Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.RequirementsGatheringEndDate, engagement.RequirementsGatheringActualEndDate).Item2">Requirements Gathering</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.RequirementsGatheringEndDate, engagement.RequirementsGatheringActualEndDate).Item1">@engagement.RequirementsGatheringEndDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.RequirementsGatheringEndDate, engagement.RequirementsGatheringActualEndDate).Item1">@engagement.RequirementsGatheringActualEndDate?.ToShortDateString()</MudText>
                                    </ItemContent>                                
                                </MudTimelineItem>
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1DevelopmentEndDate, engagement.Phase1DevelopmentActualEndDate).Item1" Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1DevelopmentEndDate, engagement.Phase1DevelopmentActualEndDate).Item2">Phase 1 development</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1DevelopmentEndDate, engagement.Phase1DevelopmentActualEndDate).Item1">@engagement.Phase1DevelopmentEndDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1DevelopmentEndDate, engagement.Phase1DevelopmentActualEndDate).Item1">@engagement.Phase1DevelopmentActualEndDate?.ToShortDateString()</MudText>
                                    </ItemContent>                                 
                                </MudTimelineItem>
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1TestingEndDate, engagement.Phase1TestingActualEndDate).Item1"  Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1TestingEndDate, engagement.Phase1TestingActualEndDate).Item2">Client testing</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1TestingEndDate, engagement.Phase1TestingActualEndDate).Item1">@engagement.Phase1TestingEndDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1TestingEndDate, engagement.Phase1TestingActualEndDate).Item1">@engagement.Phase1TestingActualEndDate?.ToShortDateString()</MudText>
                                    </ItemContent>                            
                                </MudTimelineItem>
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2DevelopmentEndDate, engagement.Phase2DevelopmentActualEndDate).Item1" Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2DevelopmentEndDate, engagement.Phase2DevelopmentActualEndDate).Item2">Phase 2 development</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2DevelopmentEndDate, engagement.Phase2DevelopmentActualEndDate).Item1">@engagement.Phase2DevelopmentEndDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2DevelopmentEndDate, engagement.Phase2DevelopmentActualEndDate).Item1">@engagement.Phase2DevelopmentActualEndDate?.ToShortDateString()</MudText>
                                    </ItemContent>                                    
                                </MudTimelineItem>
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2TestingEndDate, engagement.Phase2TestingActualEndDate).Item1" Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2TestingEndDate, engagement.Phase2TestingActualEndDate).Item2">Client testing</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2TestingEndDate, engagement.Phase2TestingActualEndDate).Item1">@engagement.Phase2TestingEndDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2TestingEndDate, engagement.Phase2TestingActualEndDate).Item1">@engagement.Phase2TestingActualEndDate?.ToShortDateString()</MudText>
                                    </ItemContent>
                                </MudTimelineItem>
                                <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsReleased, engagement.FinalReleaseDate, engagement.ActualReleaseDate).Item1" Variant="Variant.Outlined" Size="Size.Small">
                                    <ItemContent>
                                        <MudAlert Dense="true" Class="my-2" Severity="engagement.TimelineStatus(engagement.IsReleased, engagement.FinalReleaseDate, engagement.ActualReleaseDate).Item2">Release Date</MudAlert>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsReleased, engagement.FinalReleaseDate, engagement.ActualReleaseDate).Item1">@engagement.FinalReleaseDate?.ToShortDateString()</MudText>
                                        <MudText Typo="Typo.body2" Align="Align.Center" Color="engagement.TimelineStatus(engagement.IsReleased, engagement.FinalReleaseDate, engagement.ActualReleaseDate).Item1">@engagement.ActualReleaseDate?.ToShortDateString()</MudText>
                                    </ItemContent>                            
                                </MudTimelineItem>
                            </MudTimeline>
                        }
                    </MudCardContent>
            @*</ChildContent>*@
            @*</MudExpansionPanel>*@
        </MudCard>
    </AuthorizeView>

</div>

@code {

    [CascadingParameter(Name = "ProjectAcronym")]
    public string ProjectAcronym { get; set; }

    private DatahubProject _project;
    private List<ClientEngagement> _clientEngagements = new();

    protected override async Task OnInitializedAsync()
    {     
        await using var projectContext = await _dbFactoryProject.CreateDbContextAsync();
        _project = await projectContext.Projects
            .SingleAsync(p => p.ProjectAcronymCD == ProjectAcronym);

        _clientEngagements = await projectContext.ClientEngagements.Where(ce => ce.Project == _project && ce.IsEngagementActive).ToListAsync();
    }
}
