@page "/tools"
@using Datahub.Portal.Pages.Profile.Achievements
@using Datahub.Core.Model.Achievements

@inject ISnackbar _snackbar

@attribute [Authorize(Roles = "DHPGLIST")]

<DatahubAuthView AuthLevel="DatahubAuthView.AuthLevels.DatahubAdmin">
    <MudStack>
        <MudText Typo="Typo.h1">@Localizer["DataHub Tools"]</MudText>
        <MudGrid Spacing="4">
            @foreach (var tool in _tools)
            {
                <MudItem xs="6" sm="4">
                    <MudCard>
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@tool.Title</MudText>
                            <MudText Typo="Typo.body2">@tool.Description</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-4" Href="@tool.Link">@tool.Label</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }

            <MudItem xs="6" sm="4">
                <MudCard>
                    <MudCardContent>
                        <MudText Typo="Typo.h5">Achievement Toast</MudText>
                        <MudText Typo="Typo.body2">View a random achievement toast up as if it were earned</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-4" OnClick="HandleTest">View Achievement Toast</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudStack>
</DatahubAuthView>

@code {

    private List<(string Title, string Description, string Label, string Link)> _tools = new()
    {
        ("Diagnostics", "Get a developer's view of the current user", "View Diagnostics", "tools/diagnostics"),
        ("Statistics", "View the current statistics of the portal", "View Stats", "tools/stats"),
        ("Health", "View the current health of the portal", "View Health", "tools/health"),
        ("Users", "View all the portal Users and their workspaces", "View Users", "tools/users"),
        ("Email", "Send emails to portal users", "Send Emails", "tools/email"),
    };


    private void HandleTest()
    {
        var achievements = Achievement.GetAll().ToList();
        var achievement = achievements[Random.Shared.Next(achievements.Count)];

        _snackbar.Add<AchievementToast>(
            new Dictionary<string, object> { { "Achievement", achievement } },
            configure: config =>
            {
                config.HideIcon = true;
                config.ShowCloseIcon = false;
            });
    }

}