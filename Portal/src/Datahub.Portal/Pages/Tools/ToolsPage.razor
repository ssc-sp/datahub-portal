@using Datahub.Portal.Pages.Tools.AzureSubscriptionManagement
@using Datahub.Portal.Pages.Tools.Diagnostics
@using Datahub.Portal.Pages.Tools.Email
@using Datahub.Portal.Pages.Tools.Health
@using Datahub.Portal.Pages.Tools.Statistics
@using Datahub.Portal.Pages.Tools.Users

@inject ILogger<ToolsPage> _logger

@attribute [Route(PageRoutes.ToolDefault)]
@attribute [Route(PageRoutes.Tool)]

<PageTitle>
    @Localizer["SSC Datahub - Admin"]
</PageTitle>

<SectionContent SectionName="side-bar">
    <PersonalSidebar />
</SectionContent>

@{
    var containsKey = !string.IsNullOrWhiteSpace(Section)
                      && _sectionComponents.ContainsKey(Section);
    var parameters = new Dictionary<string, object>
    {
        // { "WorkspaceAcronym", WorkspaceAcronymParam }
    };

    if (containsKey)
    {
        <DynamicComponent Type="@_sectionComponents[Section]" Parameters="@parameters"/>
    }
    else
    {
        _logger.LogWarning("The section {Section} is not a valid section for the workspace page", Section);
        <DiagnosticsPage />
    }
}

@code {
    
    [Parameter]
    public string Section { get; set; } = PersonalSidebar.SectionViews.Diagnostics;
    
    private readonly Dictionary<string, Type> _sectionComponents = new()
    {
        { PersonalSidebar.SectionViews.Diagnostics, typeof(DiagnosticsPage) },
        { PersonalSidebar.SectionViews.Statistics, typeof(StatisticsPage) },
        { PersonalSidebar.SectionViews.HealthCheck, typeof(InfrastructureHealthPage) },
        { PersonalSidebar.SectionViews.Users, typeof(UsersPage) },
        { PersonalSidebar.SectionViews.Email, typeof(ComposeEmailPage) },
        { PersonalSidebar.SectionViews.AzureSubscriptions, typeof(AzureSubscriptionsPage)}
    };
}