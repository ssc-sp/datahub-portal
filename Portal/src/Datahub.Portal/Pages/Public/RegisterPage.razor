@using Datahub.Portal.Data.Forms
@using Datahub.Application.Services
@using MudBlazor.Utilities
@using Datahub.Core.Components.Common

@inject ILogger<RegisterPage> _logger

@inject IUserEnrollmentService _userEnrollmentService
@inject NavigationManager _navigationManager


@page "/register"

<PageTitle>DataHub | Registration</PageTitle>

<MudButton Style="position: absolute; top: 0.5rem; right:  0.5rem;">
    <LanguageToggle />
</MudButton>
<MudGrid Style="@_backgroundStyle" Spacing="0">
    <MudItem xs="7"/>
    <MudItem xs="5" Style="display: flex;">
        <MudPaper Class="py-16 px-16" Square>
            <MudStack Justify="Justify.SpaceBetween" Style="height: 100%;">
                <MudStack>
                    <MudStack Row AlignItems="AlignItems.Baseline">
                        <MudImage Src="/_content/Datahub.Core/img/datahub-logo-v2.png" Height="32" Width="32"></MudImage>
                        <MudText Typo="Typo.h1">
                            @Localizer["Federal Science DataHub"]
                        </MudText>
                    </MudStack>
                    <MudText Typo="Typo.h2" Align="Align.Center">
                        @Localizer["Welcome to the Government of Canada's digital hub for science data solutions."]
                    </MudText>
                    <MudText Align="Align.Center" Typo="Typo.caption">
                        @Localizer["Hosted by SSC (Proof-of-Concept Phase 2)"]
                    </MudText>
                </MudStack>
                <MudStack>
                    <MudText>@Localizer["Register here to escape the silos. On the Federal Science DataHub you can:"]</MudText>
                    <MudElement HtmlTag="ul" Style="list-style: circle; margin-left: 32px;">
                        <MudElement HtmlTag="li">
                            <MudText Typo="Typo.body2">@Localizer["Access fit-for-purpose, scalable storage for GC science Data"]</MudText>
                        </MudElement>
                        <MudElement HtmlTag="li">
                            <MudText Typo="Typo.body2">@Localizer["Easily share your data with your GC colleagues"]</MudText>
                        </MudElement>
                        <MudElement HtmlTag="li">
                            <MudText Typo="Typo.body2">@Localizer["Perform analytics and collaborate with your GC science partners in an interactive environment"]</MudText>
                        </MudElement>
                    </MudElement>
                </MudStack>
                <MudGrid Spacing="0">
                    <MudItem xs="12" md="10">
                        <MudStack>
                            <MudForm @ref="@_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
                                <MudStack>
                                    <MudText>
                                        @Localizer["Register for the Federal Science DataHub"]
                                    </MudText>
                                    <MudTextField T="@string"
                                                  Label="@Localizer["Government of Canada Email"]"
                                                  @bind-Value="_basicRegistrationForm.Email"
                                                  Required="true"
                                                  RequiredError="@Localizer["Government of Canada Email is required"]"
                                                  Validation="@(new Func<string, string>(EmailValidation))"/>
                                    <MudAutocomplete T="@string"
                                                     Label="@Localizer["Selected Government of Canada Department/Agency"]"
                                                     @bind-Value="_basicRegistrationForm.DepartmentName"
                                                     SearchFunc="@SearchDepartmentAsync"
                                                     Required="true"
                                                     RequiredError="@Localizer["Government of Canada Department/Agency is required."]"/>
                                    <MudCheckBox T="@bool" Required RequiredError="@Localizer["Agreement with the Terms of Service and Privacy Policy is required"]" Class="mt-16">
                                        <MudText Typo="Typo.body2">
                                            @Localizer["I agree to the "]
                                            <MudLink Href="/privacy" Typo="Typo.body2">
                                                @Localizer["Terms of Service and Privacy Policy"]
                                            </MudLink>
                                            @Localizer[" of the Proof of Concept Phase 2 of the Federal Science DataHub"]
                                        </MudText>
                                    </MudCheckBox>
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" Class="mr-auto" OnClick="HandleValidSubmit">
                                        @Localizer["Register"]
                                    </MudButton>
                                </MudStack>
                            </MudForm>
                            <MudText Typo="Typo.body2" Align="Align.Center">
                                @Localizer["Already registered?"]
                                <MudLink Typo="Typo.body2" Href="/login">@Localizer["Login instead"]</MudLink>
                            </MudText>
                        </MudStack>
                    </MudItem>
                </MudGrid>
            </MudStack>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {

    private BasicRegistrationForm _basicRegistrationForm;
    private string _backgroundStyle;

    private bool _success = true;
    private string[] _errors = { };
    MudForm _form;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _basicRegistrationForm = new BasicRegistrationForm();

        _backgroundStyle = new StyleBuilder()
            .AddStyle("background-image", "url('/img/signup-bg.jpg')")
            .AddStyle("background-size", "cover")
            .AddStyle("background-position", "center")
            .AddStyle("background-repeat", "no-repeat")
            .AddStyle("min-height", "100vh")
            .Build();
    }

    private async Task<IEnumerable<string>> SearchDepartmentAsync(string searchTerm)
    {
        return await Task.FromResult(BasicRegistrationForm.DepartmentDictionary.Keys
            .Where(x => x.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList());
    }

    private string EmailValidation(string email)
    {
        return _userEnrollmentService.IsValidGcEmail(email) ? null : Localizer["Invalid Government of Canada email address"];
    }

    private async Task HandleValidSubmit()
    {
        _logger.LogInformation("Attempting to register user with email: {Email}", _basicRegistrationForm.Email);
        var userId = await _userEnrollmentService.SendUserDatahubPortalInvite(_basicRegistrationForm.Email);

        if (!string.IsNullOrWhiteSpace(userId))
        {
            _logger.LogInformation("User with email: {Email} has been registered with id: {UserId}", _basicRegistrationForm.Email, userId);
            _navigationManager.NavigateTo("/login");
        }
        else
        {
            _logger.LogWarning("User with email: {Email} was not registered", _basicRegistrationForm.Email);
            _success = false;
        }
    }
}