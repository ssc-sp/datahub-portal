@using Datahub.Achievements.Models
@using MudBlazor.Utilities

<MudPaper Class="@_achievementClass" Elevation="0">
    <MudGrid Class="align-center">
        <MudItem xs="9" Style="@_textOpacityStyle">
            <MudStack Row Spacing="6" AlignItems="AlignItems.Center">
                <MudIcon Style="" Color="@(UserAchievement.Earned ? Color.Tertiary : Color.Default)" Icon="@UserAchievement!.Achievement!.Icon"/>
                <MudStack Spacing="0">
                    <MudText Typo="Typo.body1">
                        <b>@UserAchievement.Achievement?.Name</b>
                    </MudText>
                    <MudText Typo="Typo.caption">@UserAchievement.Achievement?.Description</MudText>
                </MudStack>
            </MudStack>
        </MudItem>
        <MudItem xs="3">
            @if (UserAchievement?.Earned ?? false)
            {
                <MudText Style="@_textOpacityStyle" Typo="Typo.caption">@Localizer["Earned on"] @UserAchievement!.Date?.ToString("dd MMM yyyy")</MudText>
            }
            else
            {
                var progress = Completion is null ? 1d : (Completion.Value.Item1 / (double) Completion.Value.Item2) * 100;
                <MudProgressLinear Value="progress" aria-label="Achievement completion progress">
                    <MudText Class="mb-6" Typo="Typo.caption" Color="Color.Dark">
                        @if (Completion is null)
                        {
                            <span>0 / 1</span>
                        }
                        else
                        {
                            <span>@Completion.Value.Item1 / @Completion.Value.Item2</span>
                        }
                    </MudText>
                </MudProgressLinear>
            }
        </MudItem>
    </MudGrid>
</MudPaper>

@code {

    [Parameter]
    public UserAchievement UserAchievement { get; set; }

    [Parameter]
    public (int, int)? Completion { get; set; }

    private string _textOpacityStyle;
    private string _achievementClass;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _achievementClass = new CssBuilder()
            .AddClass("pa-2")
            .AddClass("mr-6", when: Completion == null)
            .Build();

        _textOpacityStyle = new StyleBuilder()
            // .AddStyle("opacity", "0.6", when: !UserAchievement.Earned)
            // .AddStyle("opacity", "0.8", when: UserAchievement.Earned && Completion == null)
            .Build();
    }

}