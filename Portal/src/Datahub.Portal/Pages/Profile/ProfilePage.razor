@page "/profile"

@inherits ViewUserBase<ProfilePage>

@inject DatahubPortalConfiguration _datahubPortalConfiguration
@inject IPortalUserTelemetryService _telemetryService

@using Datahub.Portal.Pages.Profile.Settings
@using Datahub.Core.Model.Achievements
@using Datahub.Core.Extensions
@using Datahub.Core.Services.Achievements

@if (_viewedPortalUser is null)
{
    <MudContainer MaxWidth="MaxWidth.Small">
        <DHLoadingInitializer Message="@Localizer["Initializing Profile..."]"/>
    </MudContainer>
    return;
}

<DatahubAuthView AuthLevel="DatahubAuthView.AuthLevels.Personal" UserGraphId="@_viewedPortalUser.GraphGuid">
    <MudStack Row Justify="Justify.FlexEnd" Class="mb-8" Style="margin-top: -80px;">
        <MudButton Href="@_manageSettingsUrl" Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Settings">
            @Localizer["Manage Settings"]
        </MudButton>
    </MudStack>
</DatahubAuthView>
<MudGrid>
    <MudItem xs="12">
        <MudImage Src="@_datahubPortalConfiguration.Achievements.GetAchievementImageUrl(_viewedPortalUser?.BannerPictureUrl)"
                  Alt="@Localizer["User's background image"]"
                  Class="rounded-lg mud-elevation-4"
                  Style="width: 100%"
                  ObjectFit="ObjectFit.Cover"
                  Height="320"
                  ObjectPosition="ObjectPosition.Center"/>
    </MudItem>
    <MudItem xs="12" md="@(_viewedPortalUser.HideAchievements ? 12 : 8)">
        <MudStack Row AlignItems="AlignItems.Center" Class="mb-6">
            <MudAvatar Style="width:120px; height: 120px">
                <MudImage Src="@_datahubPortalConfiguration.Achievements.GetAchievementPortraitUrl(_viewedPortalUser?.ProfilePictureUrl)"
                          Alt="@Localizer["User's profile picture"]"
                          Height="120"
                          Width="120"/>
            </MudAvatar>
            <MudStack Spacing="0">
                <MudText Typo="Typo.h1">
                    <strong>@_viewedPortalUser?.DisplayName</strong>
                </MudText>
                <MudText Typo="Typo.caption" Class="ml-2">@_viewedPortalUser?.Email</MudText>
            </MudStack>
        </MudStack>
        <UserProjects UserId="@_viewedPortalUser?.GraphGuid"/>
    </MudItem>
    @if (!_viewedPortalUser.HideAchievements)
    {
        <MudItem xs="12" md="4">
            <MudStack>
                <MudStack Spacing="6">
                    <ProfileAchievements ViewedUser="@_viewedPortalUser" TrophyCase="@true"/>
                    <ProfileAchievements ViewedUser="@_viewedPortalUser" TrophyCase="@false"/>
                </MudStack>
                <MudLink Href="@_achievementsUrl">
                    @Localizer["View All Achievements"]
                </MudLink>
            </MudStack>
        </MudItem>
    }
</MudGrid>

@code {

    private PortalUser _currentUser;
    private PortalUser _viewedPortalUser;
    private string _manageSettingsUrl => $"/settings/{ProfileSettingsPage.SectionViews.Public}{(string.IsNullOrWhiteSpace(UserIdBase64) ? "" : $"?u={UserIdBase64}")}";
    private string _achievementsUrl => $"/profile/achievements{(string.IsNullOrWhiteSpace(UserIdBase64) ? "" : $"?u={UserIdBase64}")}";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _currentUser = await _userInformationService.GetCurrentPortalUserAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        _viewedPortalUser = await GetViewedPortalUserWithAchievementsAsync();
        
        if (_viewedPortalUser.GraphGuid != _currentUser.GraphGuid)
        {
            await _telemetryService.LogTelemetryEvent(TelemetryEvents.UserViewOtherProfile);
        }
    }

}