@using Microsoft.Graph
@using MudBlazor.Utilities
@using Datahub.Core.Model.Achievements
@using Datahub.Portal.Pages.Profile.Achievements

@inject DatahubPortalConfiguration _portalConfiguration

@if (GetUserAchievements().Any())
{
    <MudStack>
        <MudText Typo="Typo.h3" GutterBottom>@Title</MudText>
        <MudAvatarGroup Style="flex-wrap: wrap" MaxColor="Color.Primary">
            @foreach(var userAchievement in GetUserAchievements())
            {
                <MudTooltip Arrow Placement="Placement.Top">
                    <ChildContent>
                        <MudAvatar Image="@(_portalConfiguration.Achievements.GetAchievementThumbnailUrl(userAchievement.Achievement.Id))" />
                    </ChildContent>
                    <TooltipContent>
                        <AchievementCard Achievement="@userAchievement.Achievement" />
                    </TooltipContent>
                </MudTooltip>
            }
        </MudAvatarGroup>
        @if (!TrophyCase)
        {
            <MudLink Href="/profile/achievements">
                @Localizer["View All Achievements"]
            </MudLink>
        }
    </MudStack>
}

@code {
    
    [Parameter]
    public PortalUser ViewedUser { get; set; }
    
    [Parameter]
    public bool TrophyCase { get; set; }
    
    private string _groupStyle;
    private string Title => TrophyCase ? Localizer["Trophy Achievements"] : Localizer["Achievements"];

    private IEnumerable<UserAchievement> GetUserAchievements()
    {
        return ViewedUser?.Achievements?
            .Where(a => a.Achievement.IsTrophy() == TrophyCase)
            .OrderBy(a => a.Achievement.Id)
            .ThenBy(a => a.UnlockedAt)
            .ToList()
               ?? new List<UserAchievement>();
    }
}