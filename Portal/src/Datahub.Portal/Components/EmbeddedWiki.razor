@*EmbeddedWiki.razor*@

@using Datahub.Core.Services.Docs
@using Datahub.Portal.Pages.Resources
@inject DocumentationService _docService
@inject CultureService _cultureService

@if (_loading)
{
    <MudProgressCircular Indeterminate />
}
else
{
    @if (_currentDocument is not null)
    {
        <ResourcesMarkdown ShowPaper="false" DocumentItem=@_currentDocument Substitutions=@Substitutions />
    }
}

@code {

    [Parameter]
    public string PageNameEn { get; set; }

    [Parameter]
    public string PageNameFr { get; set; }

    [Parameter]
    public List<(string, string)> Substitutions { get; set; }

    private DocItem _currentDocument;
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        try
        {
            var resourceRoot = await _docService.GetLanguageRoot(DocumentationGuide.UserGuide, _cultureService.Culture);
            _currentDocument = string.IsNullOrEmpty(PagePath) ? resourceRoot : _docService.LoadPageFromPath(PagePath, _cultureService.IsFrench);
            if (_currentDocument is null)
            {
                _docService.LogNotFoundError(PagePath, resourceRoot.Title);
            }
        }
        finally
        {
            _loading = false;
        }
    }

    private string PagePath => _cultureService.IsFrench ? PageNameFr : PageNameEn;
}
