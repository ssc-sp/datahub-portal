@*Markdown.razor*@

<MarkdownEditor Value="@MarkdownValue" ValueChanged="@OnMarkdownValueChanged" ValueHTML="@MarkdownHtml" ValueHTMLChanged="@OnMarkdownValueHTMLChanged" @ref="_elementRef"/>

@code {
    [Parameter]
    public string InitialValue { get; set; }

    [Parameter]
    public string MarkdownValue { get; set; }

    [Parameter]
    public string MarkdownHtml { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public EventCallback<string> HtmlChanged { get; set; }

    private MarkdownEditor _elementRef;
    private DotNetObjectReference<DHMarkdownEditor> _dotNetObjectRef;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        MarkdownValue = InitialValue;
    }

    public async Task OnMarkdownValueChanged(string value)
    {
        MarkdownValue = value;
        await ValueChanged.InvokeAsync(value);
    }

    public async Task OnMarkdownValueHTMLChanged(string value)
    {
        MarkdownHtml = value;
        await HtmlChanged.InvokeAsync(value);
    }

    public void Dispose()
    {
        _elementRef.Dispose();
    }
    
}