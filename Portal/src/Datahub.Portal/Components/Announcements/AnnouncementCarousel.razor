@using Datahub.Application.Services.Announcements
@using MudBlazor.Utilities

@inject NavigationManager _navigationManager

<div class="reader-only"><h2>@Localizer["Announcements"]</h2></div>
<MudElement Class="rounded" HtmlTag="div" Style="@_backgroundImageStyle">
    <MudElement  Class="rounded" HtmlTag="div" Style="@_glassStyle">
        <MudCarousel Class="mud-width-full rounded"
                     Style="@_carouselStyle"
                     ShowArrows="true"
                     ShowBullets="false"
                     EnableSwipeGesture="true"
                     AutoCycle="true"
                     AutoCycleTime="@TimeSpan.FromSeconds(10)"
                     TData="object">

            @foreach (var preview in Previews)
            {
                <MudCarouselItem Transition="Transition.Fade">
                    <MudStack Class="px-12 py-4" Style="height: 100%">
                        <DHMarkdown Content="@preview.Preview"/>
                        <MudButton Style="@_readMoreStyle" Variant="Variant.Text" OnClick="() => HandleReadMore(preview.Id)">
                            @Localizer["Read more"]
                        </MudButton>
                    </MudStack>
                </MudCarouselItem>
            }
        </MudCarousel>
    </MudElement>
</MudElement>

@code {
        public const int CarouselHeight = 320;

    [Parameter]
    public List<AnnouncementPreview> Previews { get; set; } = new();

    [Parameter]
    public string BackgroundUrl { get; set; }



    private string _glassStyle;
    private string _carouselStyle;
    private string _backgroundImageStyle;

    // get the style so it's always at the bottom of the carousel
    private string _readMoreStyle => "position: absolute; bottom: 1rem; left: 2rem;";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var hasBackgroundUrl = !string.IsNullOrEmpty(BackgroundUrl);
        
        _carouselStyle = new StyleBuilder()
            .AddStyle("height", $"{CarouselHeight}px")
            .Build();

        _backgroundImageStyle = new StyleBuilder()
            .AddStyle("height", $"{CarouselHeight}px")
            .AddStyle("background", $"linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, black 100%), url('{BackgroundUrl}') no-repeat", when: hasBackgroundUrl)
            .AddStyle("background-size", "cover", when: hasBackgroundUrl)
            .AddStyle("margin-bottom", "1rem")
            .Build();

        _glassStyle = new StyleBuilder()
            .AddStyle("height", $"{CarouselHeight}px")
            .AddStyle("background", "rgba(0, 0, 0, 0.5)", when: hasBackgroundUrl)
            .AddStyle("color", "white", when: hasBackgroundUrl)
            .AddStyle("backdrop-filter", "blur(5px)", when: hasBackgroundUrl)
            .AddStyle("--mud-palette-text-primary", "white", when: hasBackgroundUrl)
            .AddStyle("--mud-palette-primary", Colors.Purple.Accent2, when: hasBackgroundUrl)
            .Build();
    }

    private void HandleReadMore(int newId)
    {
        _navigationManager.NavigateTo("/news"); // $"/news/{newId}"
    }

}