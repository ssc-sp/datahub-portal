@using Datahub.Markdown.Model
@using Datahub.Portal.Components.Resources

@inject NavigationManager _navManager
@* "@currentCategory.GetMudblazorMaterialIcon("Outlined")" *@
@* @DocItemHelper.GetMudblazorMaterialIcon("Outlined", "LibraryBooks") *@
@if (!PageIsLoading)
{
    <MudStack Class="px-4 mt-6" id="nav">
        <MudStack Class="ml-2">
            <MudStack Row="true" Spacing="3">
                <DHIcon Icon="@currentCategory.GetMudblazorMaterialIcon("Outlined")" />
                <MudText Typo="Typo.h6">
                    @Localizer[currentCategory.Title.ToUpper()]
                </MudText>
            </MudStack>

            <MudItem >
                <MudNavMenu Color=@Color.Primary>
                    <MudNavLink Href=@PageRoutes.ResourceDefault Match="NavLinkMatch.All">
                        @Localizer["Frequent Documents"]
                    </MudNavLink>
                    <MudDivider Class="my-3"/>
                    @foreach (var cat in currentCategory.Children.Where(d => !hiddenNavGroups.Contains(d.Id)))
                    {
                        var isDoc = cat.Children.Count == 0;

                        if (isDoc)
                        {
@*                             <MudToggleIconButton aria-label="Notifications toggle"
                                                 ToggledIcon="@Icons.Material.Filled.Notifications"
                                                 ToggledChanged="@ToggleNotificationsList"
                                                 Toggled="IsNotificationsListOpen"
                                                 Icon="@Icons.Material.Outlined.Notifications" /> *@
                            <MudNavLink Match="NavLinkMatch.All" Href=@BuildResourceLink(cat) Icon="@(cat.GetSidebarIcon())">
                                @cat.Title
                            </MudNavLink>
                        }
                        else
                        {
                            <MudNavGroup Title="@cat.Title" ExpandedChanged=@(isExpanding => UpdateCategory(cat, isExpanding)) Icon="@(cat.GetSidebarIcon())">
                                @foreach (var article in cat.Children)
                                {
                                    if(article.DocType == DocItemType.External)
                                    {
                                        <MudNavLink Match="NavLinkMatch.All" Target="_blank" Href=@BuildResourceLink(article)>
                                            <MudStack Row AlignItems="AlignItems.Center">
                                                <MudIcon Title="@Localizer["External"]" role="img" aria-labelledby="decimg01" Icon="@(article.GetSidebarIcon())" Size="Size.Small" Color="Color.Dark" Class="mr-2 ml-n2" Style="font-size: 1.25rem;" />
                                                <MudText>
                                                    <span class="sr-only" id="decimg01">
                                                        @Localizer["External"]
                                                    </span>
                                                    @article.Title
                                                </MudText>
                                            </MudStack>
                                        </MudNavLink>
                                    }
                                    else
                                    {
                                        <MudNavLink Match="NavLinkMatch.All" Href=@BuildResourceLink(article)>
                                            <MudStack Row AlignItems="AlignItems.Center">
                                                <MudIcon Title="@((article.DocType == DocItemType.Tutorial) ? @Localizer["Video"] : @Localizer["Document"])" role="img" aria-labelledby="decimg01" Icon="@(article.GetSidebarIcon())" Size="Size.Small" Color="Color.Dark" Class="mr-2 ml-n2" Style="font-size: 1.25rem;" />
                                                <MudText>
                                                    <span class="sr-only" id="decimg01">
                                                        @((article.DocType == DocItemType.Tutorial) ? @Localizer["Video: "] : @Localizer["Document: "])
                                                    </span>
                                                    @article.Title
                                                </MudText>
                                            </MudStack>
                                        </MudNavLink>
                                    }
                                }
                            </MudNavGroup>
                        }
                    }
                </MudNavMenu>
            </MudItem>
        </MudStack>
    </MudStack>
}

@code {

    [Parameter]
    public DocItem currentCategory { get; set; }

    [Parameter]
    public DocItem currentMarkdownCategory { get; set; }

    [Parameter]
    public List<string> hiddenNavGroups { get; set; }

    [Parameter]
    public Func<DocItem, string> BuildResourceLink { get; set; }

    [Parameter]
    public Action<DocItem, bool> UpdateCategory { get; set; }

    [Parameter]
    public bool PageIsLoading { get; set; }

}