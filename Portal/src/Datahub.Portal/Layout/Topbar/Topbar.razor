@using MudBlazor.Utilities
@using Datahub.Core.Components.Common

@inject NavigationManager _navManager

<nav class="sr-only">
    <h2>@Localizer["Screen reader navigation"]</h2>
    <ul>
        <li>
            <a href="@(_navManager.Uri + "#maincontent")">@Localizer["Skip to main content"]</a>
        </li>
        <li>
            <a href="@(_navManager.Uri + "#nav")">@Localizer["Skip to navigation"]</a>
        </li>
    </ul>
</nav>

<MudImage Src=@Localizer["/img/canada-fip.svg"] Alt=@Localizer["Government of Canada Wordmark"] Style="max-height: 25px; margin-top: 20px; float:left!important;" />

<MudText Typo="Typo.h2" Style="@_titleStyle">
    @Localizer["MainTitle"]
</MudText>
<MudStack Row Style="margin-right: auto; width: 40%; margin-top: 20px" Justify="Justify.Center" role="group">
    <h2 class="sr-only">@Localizer["Navigation menu"]</h2>
    <nav role="navigation">
        <ul style="list-style-type: none">
            <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.Home] Size="Size.Small">
                        @Localizer["Home"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.News] Size="Size.Small">
                        @Localizer["Resources"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.Explore] Size="Size.Small">
                        @Localizer["Explore"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[@PageRoutes.ResourceDefault] Size="Size.Small">
                        @Localizer["Learn"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[@PageRoutes.Help] Size="Size.Small">
                        @Localizer["Support"]
                    </DHButton>
                </li>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.LgAndUp" Invert="true">
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.Home] Size="Size.Medium">
                        @Localizer["Home"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.News] Size="Size.Medium">
                        @Localizer["Resources"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[PageRoutes.Explore] Size="Size.Medium">
                        @Localizer["Explore"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[@PageRoutes.ResourceDefault] Size="Size.Medium">
                        @Localizer["Learn"]
                    </DHButton>
                </li>
                <li style="display: inline-block; margin-inline: 5px">
                    <DHButton Variant="Variant.Text" Href=@Localizer[@PageRoutes.Help] Size="Size.Medium">
                        @Localizer["Support"]
                    </DHButton>
                </li>
            </MudHidden>
        </ul>
    </nav>
</MudStack>
@*<MudSpacer/>
<SearchPopover/>*@

<TopBarProfileButton/>

@code {

    [Parameter] public string SupportFormUrl { get; set; }

    private string _titleStyle;

    private bool IsNotificationsListOpen { get; set; }

    private void ToggleNotificationsList()
    {
        IsNotificationsListOpen = !IsNotificationsListOpen;
    }

    private void ToggleHelp()
    {
        IsNotificationsListOpen = false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _titleStyle = new StyleBuilder()
            .AddStyle("color", "var(--mud-palette-text-primary)")
            .AddStyle("font-size", "1.2rem")
            .AddStyle("margin-left", "3rem")
            .AddStyle("margin-top", "20px")
            .Build();
    }

}