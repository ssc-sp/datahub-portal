@using Datahub.Core.Model.Achievements
@using Datahub.Core.Model.Projects
@using Datahub.Core.Model.UserTracking
@using Datahub.Portal.Components.User
@using Datahub.ProjectTools.Utils
@using MudBlazor.Utilities

@inject IUserInformationService _userInformationService
@inject UserLocationManagerService _userLocationManagerService
@inject IDbContextFactory<DatahubProjectDBContext> _dbContextFactory


<MudStack Class="px-4 mt-6">
    <MudStack Class="ml-2">
        <MudStack Row AlignItems="AlignItems.Center">
            <MudAvatar Size="Size.Small">
                <MudImage Src="https://cdn.autonomous.ai/static/upload/images/common/upload/20210610/workspace-at-home410853fc3fb.jpg"></MudImage>
            </MudAvatar>
            @* <MudIcon Icon="fa-light fa-display-code" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/> *@
            <MudText Typo="Typo.h6" Style="@_workspaceTitleStyle">
                @_project?.ProjectName
            </MudText>
        </MudStack>
    </MudStack>
    <MudStack Spacing="0">
        <MudStack Row AlignItems="AlignItems.Center">
            <MudText Class="ml-2">
                <b>
                    @Localizer["Workspace Tools"]
                </b>
            </MudText>
        </MudStack>
        <MudList Clickable Dense>
            @foreach (var toolSection in _workspaceTools)
            {
                <MudListItem>
                    <MudLink Href="@GetSectionViewUrl(toolSection)" Target="@GetTarget(toolSection)" Underline="Underline.None" Color="Color.Default">
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudIcon Icon="@GetIcon(toolSection)" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                            <MudText Style="@_workspaceTitleStyle">
                                @GetLabel(toolSection)
                            </MudText>
                        </MudStack>
                    </MudLink>
                </MudListItem>
            }
           
        </MudList>
    </MudStack>

    <MudStack Spacing="0">
        <MudStack Row AlignItems="AlignItems.Center">
            <MudText Class="ml-2">
                <b>
                    @Localizer["Administration"]
                </b>
            </MudText>
        </MudStack>
        <MudList Clickable Dense>
            <MudListItem>
                <MudLink Href="@GetSectionViewUrl(SectionViews.SqlDatabase)" Underline="Underline.None" Color="Color.Default">
                    <MudStack Row AlignItems="AlignItems.Center">
                        <MudIcon Icon="fa-light fa-shop" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                        <MudText Style="@_workspaceTitleStyle">
                            @Localizer["Marketplace"]
                        </MudText>
                    </MudStack>
                </MudLink>
            </MudListItem>
            <MudListItem>
                <MudStack Row AlignItems="AlignItems.Center">
                    <MudIcon Icon="fa-light fa-users" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                    <MudText Style="@_workspaceTitleStyle">
                        @Localizer["Users"]
                    </MudText>
                </MudStack>
            </MudListItem>
            <MudListItem>
                <MudStack Row AlignItems="AlignItems.Center">
                    <MudIcon Icon="fa-light fa-tags" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                    <MudText Style="@_workspaceTitleStyle">
                        @Localizer["Metadata"]
                    </MudText>
                </MudStack>
            </MudListItem>
            <MudListItem>
                <MudStack Row AlignItems="AlignItems.Center">
                    <MudIcon Icon="fa-light fa-chart-mixed" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                    <MudText Style="@_workspaceTitleStyle">
                        @Localizer["Reports"]
                    </MudText>
                </MudStack>
            </MudListItem>
            <MudListItem>
                <MudStack Row AlignItems="AlignItems.Center">
                    <MudIcon Icon="fa-light fa-face-hand-over-mouth" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                    <MudText Style="@_workspaceTitleStyle">
                        @Localizer["Sudo"]
                    </MudText>
                </MudStack>
            </MudListItem>
            <MudListItem>
                <MudStack Row AlignItems="AlignItems.Center">
                    <MudIcon Icon="fa-light fa-gear" Size="Size.Small" Class="mr-2" Style="font-size: 1rem;"/>
                    <MudText Style="@_workspaceTitleStyle">
                        @Localizer["Settings"]
                    </MudText>
                </MudStack>
            </MudListItem>
        </MudList>
    </MudStack>


</MudStack>

@code {

    [Parameter]
    public string WorkspaceAcronym { get; set; }

    private Datahub_Project _project;

    private readonly string _workspaceTitleStyle = new StyleBuilder()
        .AddStyle("white-space", "nowrap")
        .AddStyle("overflow", "hidden")
        .AddStyle("text-overflow", "ellipsis")
        .Build();


    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = await _dbContextFactory.CreateDbContextAsync();

        _project = dbContext.Projects
            .AsNoTracking()
            .Include(p => p.Resources)
            .FirstOrDefault(p => p.Project_Acronym_CD == WorkspaceAcronym);
    }

    private string _path => $"w/{WorkspaceAcronym}";

    public struct SectionViews
    {
        public const string Dashboard = "dashboard";
        public const string Databricks = "databricks";
        public const string Storage = "storage";
        public const string WebApp = "webapp";
        public const string SqlDatabase = "sqldatabase";
        public const string Repositories = "repositories";
        public const string ArcGIS = "arcgis";

        public const string Marketplace = "marketplace";
        public const string Users = "users";
        public const string Metadata = "metadata";
        public const string Reports = "reports";
        public const string Sudo = "sudo";
        public const string Settings = "settings";
    }

    private List<string> _workspaceTools = new()
    {
        SectionViews.Dashboard,
        SectionViews.Databricks,
        SectionViews.Storage,
        SectionViews.WebApp,
        SectionViews.SqlDatabase,
        SectionViews.Repositories,
        SectionViews.ArcGIS
    };

    private string GetSectionViewUrl(string sectionView)
    {
        return sectionView switch
        {
            SectionViews.Databricks => TerraformVariableExtraction.ExtractDatabricksUrl(_project),
            SectionViews.WebApp => _project.WebApp_URL,
            _ => $"{_path}/{sectionView}"
            };
    }
    
    private string GetTarget(string sectionView)
    {
        return sectionView switch
        {
            SectionViews.Databricks => "_blank",
            SectionViews.WebApp => "_blank",
            _ => "_self"
        };
    }
    
    private string GetIcon(string sectionView)
    {
        return sectionView switch
        {
            SectionViews.Dashboard => "fa-light fa-table-layout",
            SectionViews.Databricks => "fa-light fa-display-code",
            SectionViews.Storage => "fa-light fa-hard-drive",
            SectionViews.WebApp => "fa-light fa-browser",
            SectionViews.SqlDatabase => "fa-light fa-database",
            SectionViews.Repositories => "fa-light fa-book-bookmark",
            SectionViews.ArcGIS => "fa-light fa-map",
            SectionViews.Marketplace => "fa-light fa-shop",
            SectionViews.Users => "fa-light fa-users",
            SectionViews.Metadata => "fa-light fa-tags",
            SectionViews.Reports => "fa-light fa-chart-mixed",
            SectionViews.Sudo => "fa-light fa-face-hand-over-mouth",
            SectionViews.Settings => "fa-light fa-gear",
            _ => "fa-light fa-table-layout"
        };
    }

    private string GetLabel(string sectionView)
    {
        return sectionView switch
        {
            SectionViews.Dashboard => Localizer["Dashboard"],
            SectionViews.Databricks => Localizer["Databricks"],
            SectionViews.Storage => Localizer["Storage"],
            SectionViews.WebApp => Localizer["Web App"],
            SectionViews.SqlDatabase => Localizer["SQL Database"],
            SectionViews.Repositories => Localizer["Repositories"],
            SectionViews.ArcGIS => Localizer["ArcGIS"],
            SectionViews.Marketplace => Localizer["Marketplace"],
            SectionViews.Users => Localizer["Users"],
            SectionViews.Metadata => Localizer["Metadata"],
            SectionViews.Reports => Localizer["Reports"],
            SectionViews.Sudo => Localizer["Sudo"],
            SectionViews.Settings => Localizer["Settings"],
            _ => Localizer["Dashboard"]
        };
    }
    
    

}