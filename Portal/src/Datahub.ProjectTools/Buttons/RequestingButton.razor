@using Datahub.Core.Enums
@using Datahub.Core.Model.Datahub
@using Datahub.Core.Model.Projects
@if (Project?.MetadataAdded != true)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fas fa-layer-plus">
        @Localizer["Metadata Required"]
    </MudButton>
}
else if (ModuleStatus != null && ModuleStatus != GitHubModuleStatus.Stable)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fa-solid fa-code">
        @Localizer["Under Active Development"]
    </MudButton>
}
else if (IsResourceWhitelisted == false)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fas fa-layer-plus">
        @Localizer["Not Enabled"]
    </MudButton>
}
else if (IsRunning)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fa-solid fa-spinner-third fa-spin">
        @Localizer["Requesting Service Creation"]
    </MudButton>
}
else if (ResourceCreated)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fas fa-layer-plus">
        @Localizer["Resource has been created"]
    </MudButton>
}
else if (ResourceRequested)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fa-solid fa-atom-simple fa-spin">
        @Localizer["Request is being reviewed"]
    </MudButton>
}
else if (Project?.Project_Phase == TerraformOutputStatus.PendingApproval)
{
    <MudButton Size="Size.Small" Variant="Variant.Filled" Disabled EndIcon="fas fa-layer-plus">
        @Localizer["Pending Approval"]
    </MudButton>
}
else
{
    <MudButton Size="Size.Small" OnClick="@OnRequestService" Variant="Variant.Filled" EndIcon="fas fa-layer-plus" Color="Color.Primary">
        @Localizer["Request New"]
    </MudButton>
}

@code {

    [Parameter]
    public Datahub_Project? Project { get; set; }
        
    [Parameter]
    public bool? IsResourceWhitelisted { get; set; }

    [Parameter]
    public EventCallback OnRequestService { get; set; }

    [Parameter]
    public bool ResourceRequested { get; set; }

    [Parameter]
    public bool ResourceCreated { get; set; }
    
    [Parameter]
    public bool IsRunning { get; set; }
    
    [Parameter]
    public GitHubModuleStatus? ModuleStatus { get; set; }
}