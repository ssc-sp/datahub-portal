@using Datahub.Core.Model.Datahub
@using Datahub.Core.Services.ProjectTools;
@using Datahub.ProjectTools.Buttons
@using Datahub.ProjectTools.ToolCard

@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject IRequestManagementService RequestManagementService


<ToolCard Title="@Descriptor.Title"
          Description="@Descriptor.Description">
    <Logo>
        @if (IsIconSVG)
        {
            <img src="@Icon" alt="@Descriptor.Title">
        }
        else
        {
            <MudIcon Icon="@Icon" Color="Color.Secondary"/>
        }
    </Logo>
    <ToolActionsList>
        <CostEstimatorButton TemplateName="@TemplateName" />
        <RequestingButton IsRunning="isRunning" ResourceRequested="ResourceRequested" Project="Project" OnRequestService="@HandleRequestService"/>
    </ToolActionsList>
</ToolCard>


@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public GitHubModuleDescriptor Descriptor { get; set; }

    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public bool IsIconSVG { get; set; }

    [Parameter]
    public string TemplateName { get; set; }

    [Parameter]
    public bool ResourceRequested { get; set; }

    [Parameter]
    public Datahub_Project Project { get; set; }

    private bool isRunning = false;

    private async Task HandleRequestService()
    {
        isRunning = true;
        await RequestManagementService.HandleTerraformRequestServiceAsync(Project, TemplateName);
        isRunning = false;
    }


}