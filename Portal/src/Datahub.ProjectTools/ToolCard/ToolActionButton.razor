@using MudBlazor.Utilities

@if (Disabled)
{
    <MudButton Disabled="Disabled" OnClick="@OnClick" Variant="Variant" Color="color">

        @if (LinkType == LinkType.Pending)
        {
            <i style="@(iconClass("right"))" class="fas fa-spinner-third pending"></i>
        }
        @ChildContent
        @if (LinkType == LinkType.External)
        {
            <i style="@(iconClass("left"))" class="fas fa-external-link"></i>
        }
        else if (LinkType == LinkType.Request)
        {
            <i style="@(iconClass("left"))" class="fas fa-layer-plus"></i>
        }
    </MudButton>

}
else
{
    @*Allows for component to be wrapped in NavLink or DHLink*@
    <div @onclick="@OnClick" class="@getButtonClass()">

        @if (LinkType == LinkType.Pending)
        {
            <i style="@(iconClass("right"))" class="fas fa-spinner-third pending"></i>
        }
        @ChildContent
        @if (LinkType == LinkType.External)
        {
            <i style="@(iconClass("left"))" class="fas fa-external-link"></i>
        }
        else if (LinkType == LinkType.Request)
        {
            <i style="@(iconClass("left"))" class="fas fa-layer-plus"></i>
        }
    </div>

}





@code {
    //required
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public LinkType LinkType { get; set; }

    //optional
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public EventCallback OnClick { get; set; }
    [Parameter]
    public Variant Variant { get; set; } = Variant.Text;
    
    
    private Color color => LinkType == LinkType.External || LinkType == LinkType.Internal ? Color.Primary : Color.Default;

    private string iconClass(string side)
    {
        return new StyleBuilder()
            .AddStyle($"margin-{side}", "4px")
            .Build();

    }

    private string getButtonClass()
    {
        return new CssBuilder()
            .AddClass("mud-button-root mud-button mud-button-text-size-medium mud-ripple")
            .AddClass("mud-button-text", when: Variant == Variant.Text)
            .AddClass("mud-button-text-default", when: color == Color.Default)
            .AddClass("mud-button-text-primary", when: color == Color.Primary)
            .Build();
    }
}