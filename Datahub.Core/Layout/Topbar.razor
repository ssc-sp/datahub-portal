@inject UIControlsService UI
@inject IUserInformationService UserInformationService
@inject NavigationManager NavigationManager
@inject IApiService ApiService
@using Microsoft.Identity.Web
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

@using System.Timers;

<div id="topbar">
    <div style="font-size: 1.8em;font-weight: lighter;">DataHub</div>
    <div class="search-spacer">
        <Search />
    </div>

    <NotificationsIcon />

    @*<div class="inbox icon-container">
      <NavLink href="/onboarding/applications"><i class="fad fa-inbox"></i></NavLink>
    </div>*@
   
    <div class="help-wrapper">
        <div class="help icon-container" @onclick="ToggleHelp">
            <i class="fad fa-question-circle"></i>
        </div>      
        <Popup Show="_showHelp" class="nrcan-popup top-nav-popup help-popup" OnCloseClick="ToggleHelp">
            <ChildContent>
                <Typography Variant="h3">@Localizer["Help"]</Typography>
                <Typography>@Localizer["Need a hand? We've got you covered."]</Typography>
                <Typography>@Localizer["Whether you need to report an issue or just want some guidance on setting up and using your account, send us an email at:"]</Typography>
                <div class="email-wrapper">
                    <i class="fal fa-envelope"></i>
                    <a href="mailto:Datahub.mcan@canada.ca">Datahub.mcan@canada.ca</a>
                </div>
            </ChildContent>
            <Footer>
                <div class="help-links">
                    <div class="link-wrapper" @onclick="NavigateToPrivacyStatement">
                        <a>@Localizer["Privacy Policy"]</a>
                    </div>
                    <div class="link-wrapper" @onclick="NavigateToTermsOfUse">
                        <a>@Localizer["Terms and Conditions"]</a>
                    </div>
                </div>
            </Footer>
        </Popup>
    </div>
    
    <div class="profile">
        <AuthorizeView>
            <div class="toggle" @onclick="ToggleUserPopup">
                <Typography>@UserName</Typography>
                <ProfileCircle FullName="@UserName" style="margin-left: 1rem" />
                <i class="fal fa-chevron-down" style="padding-left: 0.75rem;"></i>
            </div>
            <Popup Show="_showUserPopup" class="nrcan-popup top-nav-popup user-popup" OnCloseClick="ToggleUserPopup">
                <ChildContent>
                    <div class="user-section">
                        <ProfileCircle FullName="@UserName" />
                        <div class="details">
                            <Typography class="username">@UserName</Typography>
                            <Typography class="email">@Email</Typography>
                        </div>
                        <div class="language-toggle">
                            <Typography Variant="b" @onclick="() => ChangeLanguage(Language)" style="cursor:pointer;">@LanguageDisplay</Typography>
                        </div>
                    </div>
                    <Typography class="description">@Localizer.GetString("You have used {0} of your allocated {1}", DatahubTools.BytesToString(TotalSpaceUsed), MaxAllocatedSpace)</Typography>
                </ChildContent>
                <Footer>
                    <Typography class="signout"><a href="MicrosoftIdentity/Account/SignOut"><b>@Localizer["Sign Out"]</b></a></Typography>
                </Footer>
            </Popup>
        </AuthorizeView>
    </div>
</div>

@code
{

    public Microsoft.Graph.User User { get; set; }

    private string UserName
    {
        get
        {
            return User != null ? User.DisplayName : "...";
        }
    }
    private string Email
    {
        get
        {
            return User != null ? User.UserPrincipalName : "...";
        }
    }
    private string UserId
    {
        get
        {
            return User != null ? User.Id : "...";
        }
    }

    private bool _showHelp = false;
    private bool _showUserPopup = false;

    public string MaxAllocatedSpace = "10GB";

    public long TotalSpaceUsed { get; set; } = 0;
    
    private string Language
    {
        get
        {
            if (Thread.CurrentThread.CurrentCulture.Name.ToLower().Contains("fr"))
            {
                return "en-CA";
            }

            return "fr-CA";
        }
    }
    private string LanguageDisplay
    {
        get
        {
            if (Thread.CurrentThread.CurrentCulture.Name.ToLower().Contains("fr"))
            {
                return "English";
            }

            return "Fran√ßais";
        }
    }

    protected override void OnInitialized()
    {
        UI.OnRightSidebarChange += StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        try {
            User = await UserInformationService.GetUserAsync();
        } catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
     }

    private void ToggleHelp()
    {
        _showHelp = !_showHelp;
        _showUserPopup = false;
        StateHasChanged();
    }

    private async void ChangeLanguage(string language)
    {
        if (await UserInformationService.RegisterUserLanguage(language))
        {
            UserInformationService.SetLanguage(language);
        }
    }

    private async void ToggleUserPopup()
    {
        _showUserPopup = !_showUserPopup;
        if (_showUserPopup)
        {
            TotalSpaceUsed = await ApiService.GetUserUsedDataTotal(User);
        }
        _showHelp = false;
        StateHasChanged();
    }

    private void ToggleNotifications()
    {
        _showUserPopup = false;
        _showHelp = false;
        UI.ToggleRightSidebar(@<Datahub.Core.Views.Notifications />);
    }

    private void NavigateToTermsOfUse()
    {
        NavigationManager.NavigateTo("termsandconditions");
    }

    private void NavigateToPrivacyStatement()
    {
        NavigationManager.NavigateTo("privacystatement");
    }
}