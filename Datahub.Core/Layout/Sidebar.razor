@using Datahub.Core.Data
@using Datahub.Core.Utils
@using Datahub.Portal.Services
@inject ServiceAuthManager ServiceAuthManager

<div id="sidebar">
    <div class="logo">
        <img src="_content/Datahub.Core/img/datahub-logo-v2.png"/>
    </div>
    <div class="links">
        @foreach (var (href, icon, label) in GetLinks())
        {
            <NavLink class="@icon.Color" href="@href" Match="NavLinkMatch.Prefix" ActiveClass="active">
                <i class="@icon.Name"></i>
                @Localizer[label]
            </NavLink>
        }
        @foreach (var link in GetAuthorizedLinks())
        {
            <AuthorizeView Roles="@string.Join(',', link.Roles)">
                <NavLink class="@link.Icon.Color" href="@link.Href" Match="NavLinkMatch.Prefix" ActiveClass="active">
                    <i class="@link.Icon.Name"></i>
                    @Localizer[@link.Label]
                </NavLink>
            </AuthorizeView>
        }
    </div>
</div>

@code {


    private List<(string Href, Icon Icon, string Label)> GetLinks()
    {
        return new List<(string, Icon, string)>()
        {
            ("/home", Icon.HOME, "SIDEBAR.Home"),
    //("/data", Icon.STORAGE, "SIDEBAR.Storage"),
            ($"/{UrlPathSegment.PROJECTS}", Icon.PROJECT, "SIDEBAR.DataProjects"),
            ("/resources", Icon.RESOURCES, "SIDEBAR.Resources"),
            ("/tools", Icon.TOOLS, "SIDEBAR.Tools"),
    //("/datasets", Icon.DATASETS, "SIDEBAR.Datasets"),
    //("/powerbi", Icon.POWERBI, "SIDEBAR.PowerBI"),      
        };
    }

    private List<(string Href, Icon Icon, string Label, List<string> Roles)> GetAuthorizedLinks()
    {
        var projects = ServiceAuthManager.GetAdminProjectRoles();
        if (projects.Any())
        {
            return new List<(string, Icon, string, List<string>)>()
            {
                ("/admin", Icon.ADMIN, "SIDEBAR.Admin", projects)
            };
        }
        else
        {
            return new List<(string, Icon, string, List<string>)>();
        }
    }

}