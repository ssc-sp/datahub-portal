@namespace Datahub.Core.Templates
@using Datahub.Core.Data.CostEstimator

<style>
    .numbercol {
        text-align: right;
    }
    .totalrow td {
        font-weight: bold;
    }
</style>

<p>@UserDisplayName,</p>

<p>@Localizer[$"{LOCALIZATION_PREFIX}.EstimateEmailIntro"]</p>

<table>
    <tbody>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.InitDataLabelEmail"]</td>
            <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XGB", InitialDataGB]</td>
        </tr>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.AverageSizeLabelEmail"]</td>
            <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XMB", AverageFileSizeMB]</td>
        </tr>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.ExpGrowthLabelEmail"]</td>
            <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XGB", ExpectedMonthlyGrowth]</td>
        </tr>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.ExpReadLabelEmail"]</td>
            <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XGB", ExpectedMonthlyRead]</td>
        </tr>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.DataTierLabelEmail"]</td>
            <td class="numbercol">@GetAccessTierLabel(AccessTier)</td>
        </tr>
        <tr>
            <td>@Localizer[$"{LOCALIZATION_PREFIX}.DataRedundancyLabelEmail"]</td>
            <td class="numbercol">@GetRedundancyLabel(DataRedundancy)</td>
        </tr>
    </tbody>
</table>

<div>
    @foreach(var whichEstimate in new List<(string Title, StorageCostEstimatorResult CostEstimate)>() 
    {
        (Localizer[$"{LOCALIZATION_PREFIX}.InitialCostSection"], InitialCost), 
        (Localizer[$"{LOCALIZATION_PREFIX}.MonthlyCostSection"], MonthlyCost)
    })
    {
        <h3>@whichEstimate.Title</h3>
        
        StorageCostEstimatorResult costEstimate = whichEstimate.CostEstimate;
        @if(costEstimate.HasValues)
        {
            <table>
                <thead>
                    <tr>
                        <th>@Localizer[$"{LOCALIZATION_PREFIX}.OperationLabel"]</th>
                        <th>@Localizer[$"{LOCALIZATION_PREFIX}.NumOperationsLabel"]</th>
                        <th>@Localizer[$"{LOCALIZATION_PREFIX}.CostLabel"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var line in new List<(string Label, EstimatorResultLine Estimate)>()
                    {
                        (Localizer[$"{LOCALIZATION_PREFIX}.WriteOperations"], costEstimate.WriteOperations),
                        (Localizer[$"{LOCALIZATION_PREFIX}.ListCreateOperations"], costEstimate.ListCreateOperations),
                        (Localizer[$"{LOCALIZATION_PREFIX}.ReadOperations"], costEstimate.ReadOperations),
                        (Localizer[$"{LOCALIZATION_PREFIX}.OtherOperations"], costEstimate.OtherOperations),
                        (Localizer[$"{LOCALIZATION_PREFIX}.DataRetrieval"], costEstimate.DataRetrieval),
                        (Localizer[$"{LOCALIZATION_PREFIX}.DataWrite"], costEstimate.DataWrite),
                        (Localizer[$"{LOCALIZATION_PREFIX}.GeoReplication"], costEstimate.GeoReplication)
                    })
                    {
                        @if(line.Estimate != null)
                        {
                            <tr>
                                <td>@line.Label</td>
                                <td class="numbercol">@line.Estimate.NumberOfOperations</td>
                                <td class="numbercol">@line.Estimate.Cost.ToString("C4")</td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr class="totalrow">
                        <td>@Localizer[$"{LOCALIZATION_PREFIX}.Subtotal"]</td>
                        <td></td>
                        <td class="numbercol">@costEstimate.TotalCost.ToString("C4")</td>
                    </tr>
                    <tr>
                        <td>@Localizer[$"{LOCALIZATION_PREFIX}.SscFee"]</td>
                        <td></td>
                        <td class="numbercol">@((costEstimate.TotalCost * SSC_FEE_FACTOR).ToString("C4"))</td>
                    </tr>
                    <tr class="totalrow">
                        <td>@Localizer[$"{LOCALIZATION_PREFIX}.Total"]</td>
                        <td></td>
                        <td class="numbercol">@((costEstimate.TotalCost * (SSC_FEE_FACTOR + 1)).ToString("C4"))</td>
                    </tr>
                </tfoot>
            </table>
        }
        
    }
    @if (StorageCostsByMonth.Count > 0)
    {
        <h3>@Localizer[$"{LOCALIZATION_PREFIX}.FirstYearTotal"]</h3>
        <table>
            <thead>
                <tr>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.MonthLabel"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.StorageUsedLabel"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.StorageCostLabel"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.OperationalCostLabel"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.Subtotal"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.SscFee"]</th>
                    <th>@Localizer[$"{LOCALIZATION_PREFIX}.TotalCostLabel"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var lineItem in StorageCostsByMonth.Select((item, i) => (Month: i + 1, Item: item)))
                {
                    var monthlyOperationalCost = (lineItem.Month == 1) ?
                        MonthlyCost.TotalCost + InitialCost.TotalCost :
                        MonthlyCost.TotalCost;

                    <tr>
                        <td>@Localizer[$"{LOCALIZATION_PREFIX}.MonthNumber", lineItem.Month]</td>
                        <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XGB", lineItem.Item.NumberOfOperations]</td>
                        <td class="numbercol">@lineItem.Item.Cost.ToString("C")</td>
                        <td class="numbercol">@monthlyOperationalCost.ToString("C")</td>
                        <td class="numbercol">@((monthlyOperationalCost + lineItem.Item.Cost).ToString("C"))</td>
                        <td class="numbercol">@(((monthlyOperationalCost + lineItem.Item.Cost) * SSC_FEE_FACTOR).ToString("C"))</td>
                        <td class="numbercol">@(((monthlyOperationalCost + lineItem.Item.Cost) * (SSC_FEE_FACTOR + 1)).ToString("C"))</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr class="totalrow">
                    <td>@Localizer[$"{LOCALIZATION_PREFIX}.Total"]</td>
                    <td class="numbercol">@Localizer[$"{LOCALIZATION_PREFIX}.XGB", StorageCostsByMonth.Last().NumberOfOperations]</td>
                    @{
                        var totalStorageCost = StorageCostsByMonth.Select(s => s.Cost).Sum();
                        var totalOperationalCost = MonthlyCost.TotalCost * 12;
                        var grandTotal = totalStorageCost + totalOperationalCost;
                        <td class="numbercol">@totalStorageCost.ToString("C")</td>
                        <td class="numbercol">@totalOperationalCost.ToString("C")</td>
                        <td class="numbercol">@grandTotal.ToString("C")</td>
                        <td class="numbercol">@((grandTotal * SSC_FEE_FACTOR).ToString("C"))</td>
                        <td class="numbercol">@((grandTotal * (SSC_FEE_FACTOR + 1)).ToString("C"))</td>
                    }
                </tr>
            </tfoot>
        </table>
    }

</div>

@code {
    private static readonly string LOCALIZATION_PREFIX = "STORAGE-COST-ESTIMATOR";
    private static readonly decimal SSC_FEE_FACTOR = 0.1M;

    private string GetAccessTierLabel(AccessTierType t) => Localizer[$"{LOCALIZATION_PREFIX}.DataTier{t.ToString()}"];
    private string GetRedundancyLabel(DataRedundancyType t) => Localizer[$"{LOCALIZATION_PREFIX}.DataRed{t.ToString()}"];

    [Parameter]
    public StorageCostEstimatorResult InitialCost { get; set; }

    [Parameter]
    public StorageCostEstimatorResult MonthlyCost { get; set; }

    [Parameter]
    public IList<EstimatorResultLine> StorageCostsByMonth { get; set; }

    [Parameter]
    public string UserDisplayName { get; set; }

    [Parameter]
    public int InitialDataGB { get; set; }

    [Parameter]
    public int AverageFileSizeMB { get; set; }

    [Parameter]
    public int ExpectedMonthlyGrowth { get; set; }

    [Parameter]
    public int ExpectedMonthlyRead { get; set; }

    [Parameter]
    public AccessTierType AccessTier { get; set; }

    [Parameter]
    public DataRedundancyType DataRedundancy { get; set; }

    

}
