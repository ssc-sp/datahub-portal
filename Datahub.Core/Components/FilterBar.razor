@using Datahub.Core.Utils

@if (ShowTextSearch)
{
    <AeSearchInput 
            id="search"
            SearchIconFAClass="fas fa-search"
            OnInputChangeWithLastKey=@HandleSearch 
            style="margin: 1rem;"
            Placeholder=@SearchPlaceHolderText
    />
}
@if (ShowCheckBox)
{
    <div>
        <AeTypography Variant="p">@Localizer[CheckBoxText]</AeTypography>
        <DHCheckbox IsChecked="@IsChecked" IsCheckedChanged="e => HandleCheckChanged(e)" ></DHCheckbox>
    </div>
}
@code {

    [Parameter]
    public bool ShowCheckBox { get; set; }
    [Parameter]
    public bool ShowTextSearch { get; set; }
    [Parameter]
    public EventCallback<string> FilterSearch { get; set; }
    [Parameter]
    public string SearchPlaceHolderText { get; set; } = string.Empty;

    [Parameter]
    public string CheckBoxText { get; set; } = string.Empty;
    [Parameter]
    public bool IsChecked { get; set; }
    [Parameter]
    public EventCallback<bool> HandleCheckBoxChange { get; set; }

    private QueryThrottler<string> _searchThrottler;

    protected override async Task OnInitializedAsync()
    {
        _searchThrottler = new(TimeSpan.FromSeconds(0.5), ThrottleSearch);
    }

    private async void HandleSearch(string newValue, KeyboardEventArgs ev)
    {
        await _searchThrottler.SetQuery(newValue);
    }

    private async Task ThrottleSearch(string searchText)
    {
        await FilterSearch.InvokeAsync(searchText);                    
    }

    private async void HandleCheckChanged(bool isChecked)
    {
        await HandleCheckBoxChange.InvokeAsync(isChecked);
    }
}
