@inject IMSGraphService MSGraphService

<div class="versionContainer">
    @foreach (var version in Versions)
    {
        <div class="fileGrid" @onclick="() => SelectRowById(version.versionid)">
            <div class="grid-item">
                <i class="@iconClass(version)"></i>
            </div>
            <div class="grid-item">
                <b>@Localizer["VERSION-LIST-PAGE.Version", version.index]&nbsp;</b> @version.index == Versions.Count ? Localizer["VERSION-LIST-PAGE.Current"] : string.Empty
            </div>
            <div class="grid-item">
                <a>not in use</a>
            </div>
            <div class="grid-item">
                @version.metadata.uploadeddate.ToString("f", CultureInfo.CreateSpecificCulture("en-CA"))
            </div>
            <div class="grid-item">
                @DatahubTools.BytesToString(version.metadata.filesize.ToString())
            </div>
        </div>
    }

</div>

@code {

    [Parameter]
    public List<Datahub.Core.Data.Version> Versions { get; set; }
    [Parameter]
    public EventCallback<string> SelectedItem { get; set; }

    string _selectedItem;

    public string iconClass(Datahub.Core.Data.Version item)
    {
        if (_selectedItem == item.versionid)
        {
            return "far fa-check-circle icon-color";
        }

        return "fal fa-circle icon-color";
    }

    private Task SelectRowById(string versionid)
    {
        _selectedItem = versionid;
        return SelectedItem.InvokeAsync(versionid);
    }

    private async Task<string> GetStatus(Datahub.Core.Data.Version version)
    {
        string createdUser = await MSGraphService.GetUserName(version.metadata.createdby, CancellationToken.None); 
        if (string.IsNullOrWhiteSpace(createdUser))
        {
            createdUser = Localizer["VERSION-LIST-PAGE.Unknown"];
        }

        return Localizer[ version.index == 1 ? "VERSION-LIST-PAGE.CreatedBy" : "VERSION-LIST-PAGE.EditedBy", createdUser];
    }
}