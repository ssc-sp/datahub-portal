@inject IUserInformationService UserInformationService
@inject IPowerBiDataService PowerBiDataService


<div class="ae table-container">
    @if (_reports != null)
    {
        <AePaginatedTable
            Accessors=@accessors
            Renderers=@renderers
            Dataset="_reports"
            class="custom light"
            style="Width:100%"
            GridTemplateColumns="0.5fr 3fr 2fr"
            Page=@_currentPage
            PageSize="4"
            @ref=@_reportTable
        />

        <AePagination Pageable=@_reportTable OnPageClick=@OnPageClick> 
            <LeftIcon><i class='fad fa-chevron-double-left'></i></LeftIcon> 
            <RightIcon><i class='fad fa-chevron-double-right'></i></RightIcon>
        </AePagination>   
    }
</div>


@code {

    private IPageableComponent _reportTable;

    private int _currentPage = 0;

    private List<Func<PowerBi_Report, string>> accessors = new()
    {
        r => r.Workspace.Project?.ProjectName ?? string.Empty,
        r => r.Report_Name,
        r => r.Workspace.Project?.ProjectName ?? string.Empty
    };

    private List<Func<PowerBi_Report, RenderFragment>> renderers = new();

    private void OnPageClick(int pageIndex)
    {
        _currentPage = pageIndex;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
        }

        await Task.CompletedTask;
    }

    private List<PowerBi_Report> _reports;

    private RenderFragment ProjectIconFragment(PowerBi_Report r) =>
    @<AeFlex class="table-icon">
        <i class="@($"fad fa-{r.Workspace.Project?.Project_Icon}")"></i>
    </AeFlex>
    ;

    private RenderFragment ReportLinkFragment(PowerBi_Report r) =>
    @<AeFlex style="padding-top: 1rem">
        <AeTypography>
            <DHLink 
                    LinkType=@DatahubLinkType.PowerBI
                    DataProject=@(r.Workspace.Project?.Project_Acronym_CD)
                    PBIWorkspaceId=@(r.Workspace_Id.ToString())
                    PBIReportId=@(r.Report_ID.ToString())
                    Name=@(r.Report_Name)>
                @r.Report_Name
            </DHLink>
        </AeTypography>
    </AeFlex>
    ;

    private RenderFragment ProjectLinkFragment(PowerBi_Report r) =>
    @<AeFlex style="padding-top: 1rem">
        <AeTypography>
            <DHLink DataProject=@(r.Workspace.Project?.Project_Acronym_CD)>
                @r.Workspace.Project?.ProjectName
            </DHLink>
        </AeTypography>
    </AeFlex>
    ;

    private async Task FillRenderers()
    {
        renderers = new()
            {
                ProjectIconFragment,
                ReportLinkFragment,
                ProjectLinkFragment
            };

        await Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        var currentUserId = await UserInformationService.GetUserIdString();

        _reports = await PowerBiDataService.GetReportsForUser(currentUserId);

        await FillRenderers();
    }

}