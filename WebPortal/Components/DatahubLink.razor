@using Microsoft.Extensions.Logging 
@inject ILogger<DatahubLink> Logger
@inject NavigationManager NavigationManager
@inject UserLocationManagerService UserLocationManagerService

@inherits HtmlElement

<a class="@_classname" @onclick="Navigate" @attributes="@InputAttributesWithoutClass">@ChildContent</a>

@code {

    private string _classname => $"ae typography {Variant} a {_inputClass}";

    [Parameter]
    public DatahubLinkType LinkType { get; set; } = DatahubLinkType.Undefined;

    [Parameter]
    public string PowerBIURL { get; set; }

    [Parameter]
    public string Variant { get; set; }

    [Parameter]
    public string DatabricksURL { get; set; }

    [Parameter]
    public string WebFormsURL { get; set; }

    [Parameter]
    public string DataProject { get; set; }

    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public UserRecentLink? UserRecentLink { get; set; }

    //            <NavLink href="@("/project/" + p.Project_Acronym_CD)"> <AeTypography></AeTypography></NavLink>

    private string url;

    private async Task Navigate()
    {
        UserRecentLink link;
        if (UserRecentLink != null)
        {
            LinkType = UserRecentLink.LinkType;
            link = UserRecentLink;
            await UserLocationManagerService.RegisterNavigation(link, false);
        }
        else
        {
            link = new UserRecentLink();
            if (LinkType == DatahubLinkType.Undefined)
            {
                if (PowerBIURL != null)
                    LinkType = DatahubLinkType.PowerBI;
                else if (DatabricksURL != null)
                    LinkType = DatahubLinkType.Databricks;
                else if (WebFormsURL != null)
                    LinkType = DatahubLinkType.WebForm;
                else if (DataProject != null)
                    LinkType = DatahubLinkType.DataProject;
            }
            link.LinkType = LinkType;
            link.PowerBIURL = PowerBIURL;
            link.Variant = Variant;
            link.DatabricksURL = DatabricksURL;
            link.WebFormsURL = WebFormsURL;
            link.DataProject = DataProject;
            link.Name = Name;
            await UserLocationManagerService.RegisterNavigation(link, true);
        }
        switch (LinkType)
        {
            case DatahubLinkType.PowerBI:
                NavigationManager.NavigateTo(link.PowerBIURL);
                break;
            case DatahubLinkType.DataProject:
                NavigationManager.NavigateTo($"/project/{link.DataProject}");
                break;
            case DatahubLinkType.Databricks:
                NavigationManager.NavigateTo(link.DatabricksURL);
                break;
            case DatahubLinkType.WebForm:
                NavigationManager.NavigateTo(link.WebFormsURL);
                break;
            case DatahubLinkType.FormBuilder:
                NavigationManager.NavigateTo($"/project/{link.DataProject}/forms");
                break;
            case DatahubLinkType.Storage:
                NavigationManager.NavigateTo($"/project/{link.DataProject}/filelist");
                break;
            case DatahubLinkType.DataSharingDashboard:
                NavigationManager.NavigateTo($"/project/{link.DataProject}/datasharing");
                break;
        }
    }
}
