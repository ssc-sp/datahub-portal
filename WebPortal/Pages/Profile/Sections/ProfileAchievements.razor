@using Datahub.Achievements.Models
@using MudBlazor.Utilities
@inject AchievementService _achievementService;

<MudStack Class="my-4">
    <MudStack Row AlignItems="AlignItems.Baseline">
        <MudText Typo="Typo.h5">@Localizer["Achievements"]</MudText>
    </MudStack>
    <MudStack>
        @if (_metaAchievements != null)
        {
            <MudExpansionPanels Elevation="0" MultiExpansion>

                @foreach (var metaAchievement in _metaAchievements
                    .OrderBy(a => a.Code))
                {
                    var subAchievements = _achievementsByParentCode[metaAchievement.Code!]
                        .OrderByDescending(a => a.Earned)
                        .ThenBy(a => a.Achievement?.Code)
                        .ToList();

                    var completion = (subAchievements.Count(a => a.Earned), subAchievements.Count);
                    
                    <MudExpansionPanel>
                        <TitleContent>
                            <AchievementCard UserAchievement="metaAchievement" Completion="completion"/>
                        </TitleContent>
                        <ChildContent>
                            @foreach (var userAchievement in _achievementsByParentCode[metaAchievement.Code!]
                                .OrderByDescending(a => a.Earned)
                                .ThenBy(a => a.Achievement?.Code))
                            {
                                <AchievementCard UserAchievement="userAchievement"/>
                            }
                        </ChildContent>
                    </MudExpansionPanel>
                }

            </MudExpansionPanels>
        }
    </MudStack>
</MudStack>

@code {

    [Parameter]
    public GraphUser User { get; set; }

    private Dictionary<string, List<UserAchievement>> _achievementsByParentCode;
    private List<UserAchievement> _metaAchievements;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            var achievements = await _achievementService.GetUserAchievements(User.Mail);
            _achievementsByParentCode = achievements
                .GroupBy(a => a.Achievement?.ParentAchievementCode ?? "None")
                .ToDictionary(a => a.Key, a => a.ToList());

            _metaAchievements = achievements.Where(a => a.Achievement is { MetaAchievement: true }).ToList();
            StateHasChanged();
        }
    }

}