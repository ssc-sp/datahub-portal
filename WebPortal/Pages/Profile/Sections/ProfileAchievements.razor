@using Datahub.Achievements.Models
@using MudBlazor.Utilities
@inject AchievementService _achievementService;

<MudStack Class="my-4">
    <MudStack Row AlignItems="AlignItems.Baseline">
        <MudText Typo="Typo.h5">@Localizer["Achievements"]</MudText>
    </MudStack>
    <MudStack>
        @if (_achievements != null)
        {
            @foreach (var userAchievement in _achievements
                .OrderByDescending(a => a.Earned)
                .ThenBy(a => a.Achievement?.Code))
            {
                <MudCard Outlined Style="@(userAchievement.Earned ? _achievementEarnedStyle : _achievementNotEarnedStyle)">
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudIcon Size="Size.Large" Color="@(userAchievement.Earned ? Color.Secondary : Color.Default)" Icon="@userAchievement!.Achievement!.Icon"/>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@userAchievement.Achievement?.Name</MudText>
                            <MudText Typo="Typo.caption">@userAchievement!.Date?.ToString("dd-MMM-yyyy")</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body2">@userAchievement.Achievement?.Description</MudText>
                    </MudCardContent>
                </MudCard>
            }
        }
    </MudStack>
</MudStack>

@code {

    [Parameter]
    public Microsoft.Graph.User User { get; set; }

    private IEnumerable<UserAchievement> _achievements;
    private string _achievementEarnedStyle;
    private string _achievementNotEarnedStyle;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _achievements = await _achievementService.GetUserAchievements();
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _achievementEarnedStyle = new StyleBuilder()
            .AddStyle("background-color", "var(--mud-palette-secondary)")
            .AddStyle("color", "var(--mud-palette-on-secondary)")
            .Build();
        
        _achievementNotEarnedStyle = new StyleBuilder()
            .AddStyle("opacity", "0.5")
            .Build();
    }

}