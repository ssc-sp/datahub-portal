@inject AchievementService _achievementService;

<MudStack>
    <MudStack Row AlignItems="AlignItems.Baseline">
        <MudText Typo="Typo.h6">@Localizer["Achievements"]</MudText>
        <MudLink Href="/profile" Typo="Typo.caption">@Localizer["View all"]</MudLink>
    </MudStack>
    <MudGrid>
        @if (_achievements != null)
        {
            @foreach (var userAchievement in _achievements
                .Values
                .OrderByDescending(a => a.Earned)
                .ThenBy(a => a.Achievement?.Code))
            {
                <MudItem xs="1">
                    <MudTooltip Text="@userAchievement!.Achievement!.Name">
                        <MudIconButton Color="@(userAchievement.Earned ? Color.Secondary : Color.Default)" Icon="@userAchievement!.Achievement!.Icon" aria-label="@userAchievement!.Achievement!.Name"/>
                    </MudTooltip>
                </MudItem>
            }
        }
    </MudGrid>
</MudStack>

@code {

    [Parameter]
    public Microsoft.Graph.User User { get; set; }
    
    private Dictionary<string, UserAchievement> _achievements;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _achievements = await _achievementService.GetUserAchievements(User.Id);
            StateHasChanged();
        }
    }

}