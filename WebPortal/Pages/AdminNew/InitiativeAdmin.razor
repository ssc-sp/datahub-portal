@inject IUserInformationService _userInformationService
@inject ServiceAuthManager _serviceAuthManager

@page "/admin/initiatives"

<DHPageTitle PageTitleKey="@Localizer["Initiative Administration"]" />

<MudText Typo=Typo.h3>@Localizer["Initiative Administration"]</MudText>

<AuthorizeView Roles=@RoleConstants.DATAHUB_ROLE_ADMIN>
    <CascadingValue Value="CurrentUserId" Name="UserId">
        <CascadingValue Value="IsDataHubAdmin" Name="IsDatahubAdmin">
            <CascadingValue Value="CurrentUserEmail" Name="CurrentUserEmail">
                <Datahub.Portal.Pages.Admin.Requests.ProjectAccessRequestTable />
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</AuthorizeView>


@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }


    private System.Security.Claims.ClaimsPrincipal _user;
    private string CurrentUserId { get; set; }
    private string CurrentUserName { get; set; }
    private string CurrentUserEmail { get; set; }
    private bool IsDataHubAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await _userInformationService.GetUserAsync();
        //_authorizedRoles = _serviceAuthManager.GetAdminProjectRoles(user.Id);
        _user = (await AuthenticationStateTask).User;
        

        CurrentUserId = await _userInformationService.GetUserIdString();
        CurrentUserEmail = _user.Identity?.Name;
        CurrentUserName = _user.Claims.FirstOrDefault(c => c.Type == "name")?.Value;
        IsDataHubAdmin = _user.IsInRole(RoleConstants.DATAHUB_ROLE_ADMIN);

    }

}
