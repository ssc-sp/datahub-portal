@page "/metadata"
@using NRCan.Datahub.Metadata;

<AeCard>
    <Header>
        <h2>Metadata</h2>
    </Header>
    <ChildContent>
        <AeFlex>
            <div style="width: 200px; flex-grow: 0.5">
                <MetadataEditorB Preview="false"
                                 Definitions="@_definitions"
                                 FieldValues="@_fieldValues"
                                 OnFieldChanged="FieldChanged" />

            </div>

            <div style="width: 200px; flex-grow: 0.5">
                @if (_preview)
                {
                    <MetadataEditorB Preview="_preview"
                                     Definitions="@_definitions"
                                     FieldValues="@_fieldValues"
                                     OnFieldChanged="FieldChanged" />
                }

            </div>
        </AeFlex>
    </ChildContent>
    <Footer>
        <AeButton @onclick="TogglePreview">Toggle Preview</AeButton>
    </Footer>
</AeCard>

@code {

    [Inject]
    public IMetadataBrokerService MetadataBrokerService { get; set; }

    private MetadataDefinition _definitions { get; set; }

    private FieldValues _fieldValues { get; set; }

    private bool _preview = false;

    protected override async Task OnInitializedAsync()
    {
        _definitions = await MetadataBrokerService.GetMetadataDefinition();

        _fieldValues = new FieldValues()
        {
            new FieldValue()
            {
                DefinitionId = "notes_fr",
                Value = "Sample note francais"
            },
            new FieldValue()
            {
                DefinitionId = "Type",
                Value = "Sample type"
            }
        };
    }

    private void FieldChanged(FieldValue field)
    {
        StateHasChanged();
    }

    private void TogglePreview()
    {
        _preview = !_preview;
    }

    private void AppendTestChoices()
    {
        var choices = "Non-Spatial|Open code|API|Application"
            .Split('|')
            .Select(choice => new FieldChoice()
            {
                Value = choice,
                LabelEnglish = choice,
                LabelFrench = choice
            })
            .ToList();

        _definitions.Get("Collection").Choices = choices;
    }
}
