@page "/powerbi-report/embed/{ReportId}"
@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@layout PublicLayout
@using Datahub.Portal.Layout
@using Microsoft.PowerBI.Api
@using Microsoft.PowerBI.Api.Models
@using Newtonsoft.Json.Linq
@using Microsoft.Extensions.Configuration
@inject IJSRuntime JSRuntime
@inject IConfiguration _configuration



<div @ref="@PowerBIElement" style="width:100%;height:600px;max-width: 2000px">@_errorMessage</div>

@code {

    [Parameter]
    public string ReportId {  get;  set; }



    [Parameter]
    [SupplyParameterFromQuery]
    public bool ReadOnly { get; set; }

    private ElementReference PowerBIElement;

    private Report report;
    private EmbedToken reportToken;

    private string _errorMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                using var context = _dbFactoryProject.CreateDbContext();
                var extreport = context.ExternalPowerBiReports.Where(r => r.Report_ID.ToString() == ReportId).FirstOrDefault();

                if (extreport is not null)
                {

                    var pbiSettings = new PowerBISettings();
                    if (ReadOnly)
                    {
                        pbiSettings.bars.actionBar.visible = false;
                        pbiSettings.navContentPaneEnabled = false;
                    }


                    await JSRuntime.InvokeAsync<object>(
                        "ShowMyPowerBI.showReportEmbed",
                        PowerBIElement, extreport.Token, extreport.Url,
                    extreport.Report_ID.ToString(), pbiSettings);

                }
            }
        } 
        catch (Exception ex)
        {
            HandleError(ex);
        }
    }

    private void HandleError(Exception ex)
    {
            _errorMessage = $"Internal error loading report {ReportId}.";
           
    }

    private const string AuthorityFormat = "https://login.microsoftonline.com/{0}/v2.0";
    private const string MSGraphScope = "https://analysis.windows.net/powerbi/api/.default";
}