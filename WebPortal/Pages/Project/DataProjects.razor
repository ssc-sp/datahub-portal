@using Datahub.Core.Components.PageBanner

@inject NavigationManager _navigationManager
@inject IJSRuntime _jsInterop
@inject IDbContextFactory<DatahubProjectDBContext> _dbFactory


@page "/projects"

<DHPageAlert Title=@Localizer["Welcome to Data Projects"]
             Key="@PageAlert.Projects"
             WikiLinkEN="Onboarding---Data-Projects"
             WikiLinkFR="Onboarding---Data-Projects" />

<MudText Typo="Typo.h4">@Localizer["Featured Projects"]</MudText>

<div class="featured-projects-container">
    @foreach (var p in _featured)
    {
        <FeaturedProject Project="p"/>
    }
</div>

<MudText Typo="Typo.h4">@Localizer["All Projects"]</MudText>

<div class="all-projects-container">

    <MudGrid>
        <MudItem sm="4">
            <MudTextField DebounceInterval="500"
                          T="string"
                          OnDebounceIntervalElapsed="HandleAllProjectSearch"
                          Label=@Localizer["Filter projects"]
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Clearable="true"
                          Adornment="Adornment.End"
                          AdornmentIcon="@Icons.Filled.Search" />
        </MudItem>
    </MudGrid>

    <div class="all-projects">
        @if (_filteredProjects.Any())
        {
            @foreach (var p in _filteredProjects)
            {
                <div class="project-row">
                    <AeTypography class="sector">
                        <i class="@($"fad fa-{p.Project_Icon ?? Icon.DEFAULT_PROJECT_ICON}")"></i>
                        @Localizer[p.Sector_Name ?? "N/A"]
                    </AeTypography>
                    <DHLink class="name" DataProject="@p.Project_Acronym_CD" style="cursor: pointer;">
                        <i class="fas fa-external-link"></i>
                        @p.ProjectName
                    </DHLink>
                    <DHMarkdown class="description" Content="@p!.ProjectDescription"></DHMarkdown>
                </div>
            }
        }
        else
        {
            <div class="no-projects">
                <i class="fas fa-box-full"></i>
                <MudText Typo="Typo.h5">@Localizer["Sorry, we can't find any projects that match your filter!"]</MudText>
            </div>
        }
    </div>
</div>

@code {

    private List<Datahub_Project> _allProjects;
    private List<Datahub_Project> _filteredProjects;
    private List<Datahub_Project> _featured;

    protected override async Task OnInitializedAsync()
    {
        await using var context = await _dbFactory.CreateDbContextAsync();
        _allProjects = context.Projects
            .Where(p =>
                (p.Project_Status_Desc == Datahub_Project.ONGOING || p.Is_Featured) &&
                !p.Is_Private && !string.IsNullOrWhiteSpace(p.Project_Acronym_CD)
                && !string.IsNullOrWhiteSpace(p.Project_Name))
    // .Include(p => p.Users)
            .ToList();
        _featured = _allProjects.Where(p => p.Is_Featured).ToList();
        _filteredProjects = _allProjects;
    }
    
    private void HandleAllProjectSearch(string filterValue)
    {
        _filteredProjects = _allProjects
            .Where(p => p.Project_Name.ToLowerInvariant().Contains(filterValue.ToLowerInvariant()))
            .ToList();
    }
}