@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject RequestManagementService _requestManagementService

@if (_project is null)
{
    <ToolCard Loading/>
}
else
{
    <ToolCard
        Title="@Localizer["IoT Devices"]"
        Description="@Localizer["Access the connection details for the IoT devices connected to this project"]">
        <Logo>
            <i class="fas fa-router fa-2x"></i>
        </Logo>
        <ToolActionsList>
            <MudStack Row>
                <DHLink LinkType="DatahubLinkType.Storage">
                    <ToolActionButton LinkType="LinkType.Internal">
                        @Localizer["Manage Devices"]
                    </ToolActionButton>
                </DHLink>
                <DHLink LinkType="DatahubLinkType.Storage">
                    <ToolActionButton LinkType="LinkType.Internal">
                        @Localizer["Connect New Device"]
                    </ToolActionButton>
                </DHLink>
            </MudStack>
        </ToolActionsList>
    </ToolCard>
}

@code {

    private Datahub_Project _project;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await using var projectDbContext = await _dbFactoryProject.CreateDbContextAsync();

        _project = await projectDbContext.Projects
            .Include(p => p.Requests)
            .FirstAsync();
    }
}