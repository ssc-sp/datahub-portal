@using Datahub.Portal.Pages.Project.DataProject.ProjectTools
@inject IDbContextFactory<DatahubProjectDBContext> _dbFactoryProject
@inject UIControlsService _uiControlService;



<div class="project-info">
    <AuthorizeView Roles=@RoleConstants.DATAHUB_ROLE_ADMIN Context="Engagement_Card">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h4">Client Engagements</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Minimize" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
                @foreach (var engagement in _clientEngagements)
                {
                    <MudText Typo="Typo.h6">@engagement.Engagement_Name</MudText>
                    <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate">
                        <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.Requirements_Gathering_EndDate, engagement.Requirements_Gathering_ActualEndDate).Item1" Variant="Variant.Filled">
                            <ItemContent>
                                <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.Requirements_Gathering_EndDate, engagement.Requirements_Gathering_ActualEndDate).Item2">Requirements Gathering</MudAlert>
                            </ItemContent>
                            <ItemOpposite>
                                <MudText Typo="Typo.caption" Color="engagement.TimelineStatus(engagement.IsRequirementsComplete, engagement.Requirements_Gathering_EndDate, engagement.Requirements_Gathering_ActualEndDate).Item1">@engagement.Requirements_Gathering_EndDate.Value.ToShortDateString()</MudText>
                            </ItemOpposite>
                        </MudTimelineItem>
                        <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1_Development_EndDate, engagement.Phase1_Development_ActualEndDate).Item1" Variant="Variant.Filled">
                            <ItemContent>
                                <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1_Development_EndDate, engagement.Phase1_Development_ActualEndDate).Item2">Phase 1 development</MudAlert>
                            </ItemContent>
                            <ItemOpposite>
                                <MudText Typo="Typo.caption"  Color="engagement.TimelineStatus(engagement.IsPhase1DevComplete, engagement.Phase1_Development_EndDate, engagement.Phase1_Development_ActualEndDate).Item1">@engagement.Phase1_Development_EndDate.Value.ToShortDateString()</MudText>
                            </ItemOpposite>
                        </MudTimelineItem>
                        <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1_Testing_EndDate, engagement.Phase1_Testing_ActualEndDate).Item1" Variant="Variant.Filled">
                            <ItemContent>
                                <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1_Testing_EndDate, engagement.Phase1_Testing_ActualEndDate).Item2">Phase 1 testing</MudAlert>
                            </ItemContent>
                            <ItemOpposite>
                                <MudText Typo="Typo.caption" Style="font-size: small" Color="engagement.TimelineStatus(engagement.IsPhase1TestComplete, engagement.Phase1_Testing_EndDate, engagement.Phase1_Testing_ActualEndDate).Item1">@engagement.Phase1_Testing_EndDate.Value.ToShortDateString()</MudText>
                            </ItemOpposite>
                        </MudTimelineItem>
                             <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2_Development_EndDate, engagement.Phase2_Development_ActualEndDate).Item1" Variant="Variant.Filled">
                            <ItemContent>
                                <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2_Development_EndDate, engagement.Phase2_Development_ActualEndDate).Item2">Phase 2 development</MudAlert>
                                    </ItemContent>
                                    <ItemOpposite>
                                <MudText Typo="Typo.caption" Color="engagement.TimelineStatus(engagement.IsPhase2DevComplete, engagement.Phase2_Development_EndDate, engagement.Phase2_Development_ActualEndDate).Item1">@engagement.Phase2_Development_EndDate.Value.ToShortDateString()</MudText>
                                </ItemOpposite>
                            </MudTimelineItem>
                            <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2_Testing_EndDate, engagement.Phase2_Testing_ActualEndDate).Item1" Variant="Variant.Filled">
                                <ItemContent>
                                    <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2_Testing_EndDate, engagement.Phase2_Testing_ActualEndDate).Item2">Phase 2 testing</MudAlert>
                                </ItemContent>
                                <ItemOpposite>
                                    <MudText Typo="Typo.caption" Color="engagement.TimelineStatus(engagement.IsPhase2TestComplete, engagement.Phase2_Testing_EndDate, engagement.Phase2_Testing_ActualEndDate).Item1">@engagement.Phase2_Testing_EndDate.Value.ToShortDateString()</MudText>
                                </ItemOpposite>
                            </MudTimelineItem>
                        <MudTimelineItem Color="engagement.TimelineStatus(engagement.IsReleased, engagement.Final_Release_Date, engagement.Actual_Release_Date).Item1" Variant="Variant.Filled">
                            <ItemContent>
                                <MudAlert Typo="Typo.caption" Severity="engagement.TimelineStatus(engagement.IsReleased, engagement.Final_Release_Date, engagement.Actual_Release_Date).Item2">Release Date</MudAlert>
                            </ItemContent>
                            <ItemOpposite>
                                <MudText Typo="Typo.caption" Color="engagement.TimelineStatus(engagement.IsReleased, engagement.Final_Release_Date, engagement.Actual_Release_Date).Item1">@engagement.Final_Release_Date.Value.ToShortDateString()</MudText>
                            </ItemOpposite>
                        </MudTimelineItem>
                    </MudTimeline>
                }
        </MudCardContent>
    </MudCard>
</AuthorizeView>

</div>
@code {

    [CascadingParameter(Name = "ProjectAcronym")]
    public string ProjectAcronym { get; set; }

    private Datahub_Project _project;
    private List<Client_Engagement> _clientEngagements = new();

    protected override async Task OnInitializedAsync()
    {     
        await using var projectContext = await _dbFactoryProject.CreateDbContextAsync();
        _project = await projectContext.Projects
            .SingleAsync(p => p.Project_Acronym_CD == ProjectAcronym);

        _clientEngagements = await projectContext.Client_Engagements.Where(ce => ce.Project == _project).ToListAsync();
    }
}
