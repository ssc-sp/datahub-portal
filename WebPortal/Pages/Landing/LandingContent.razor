@using Microsoft.Extensions.Options
@using Microsoft.Graph

@using Datahub.Portal.Pages.Landing.Tabs

@inject IUserInformationService UserInformationService
@inject UserLocationManagerService UserLocationManagerService
@inject NavigationManager NavigationManager
@inject IOptions<DataProjectsConfiguration> DataProjectsConfiguration

<AeTypography Variant="h4" style="margin-top: 2.5rem">My Places</AeTypography>
<AeFlex class="landing-content-wrapper">
    <AeFlex class="landing-content">
        <TabControl TabIndex="@TabIndex" OnChangeTab="@OnChangeTab">
            @foreach (var (control, content) in GetTabs())
            {
                <TabPage>
                    <Control>
                        <AeTypography>@control</AeTypography>
                    </Control>
                    <ChildContent>
                        @content
                    </ChildContent>
                </TabPage>
            }
        </TabControl>
    </AeFlex>
</AeFlex>

@code {

    [Parameter]
    public int TabIndex { get; set; }

    [CascadingParameter(Name = "GraphUser")]
    public Microsoft.Graph.User User { get; set; }

    List<UserRecentLink> links = null;

    private List<(string Control, RenderFragment Content)> GetTabs()
    {
        var res = new List<(string, RenderFragment)>
        {
            (Localizer["Projects"], @<ProjectsTab/>)
        };

        if (DataProjectsConfiguration.Value.Databricks)
            res.Add((Localizer["Databricks Workbooks"], @<DatabricksTab/>));
        if (DataProjectsConfiguration.Value.PowerBI)
            res.Add((Localizer["Power BI Reports"], @<PowerBITab/>));
        if (DataProjectsConfiguration.Value.WebForms)
            res.Add((Localizer["Data Entry"], @<DataEntryTab/>));

        return res;
    }

    private void OnChangeTab(int tabIndex)
    {
        if (tabIndex != TabIndex)
        {
            NavigationManager.NavigateTo($"/home/{tabIndex}");
        }
    }

}