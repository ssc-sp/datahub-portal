@using Datahub.Portal.Pages.Project
@using Datahub.Core.Components.Pageable

@inject IStringLocalizer<DataLabels> _dataLocalizer
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsInterop
@inject IDbContextFactory<DatahubProjectDBContext> _dbFactory

@implements IDisposable
@page "/projects"

<h1>@Localizer["Featured Projects"]</h1>
<div class="featured-projects">
    @foreach (var p in _featured)
    {
        <FeaturedProject Project="p"/>
    }
</div>

<h1>@Localizer["All Projects"]</h1>

<div class="all-projects-container">

    <div class="paging">
        <AePagination
            Pageable="@_pagingInfo"
            OnPageClick="index => _pagingInfo.Page = index">
            <LeftIcon>
                <i class="fad fa-chevron-double-left"></i>
            </LeftIcon>
            <RightIcon>
                <i class="fad fa-chevron-double-right"></i>
            </RightIcon>
        </AePagination>
    </div>
    <div class="all-projects">
        @foreach (var p in _pagedProjects)
        {
            <AllProjectsRow Project="p"/>
        }
    </div>
</div>

@code {

    private IPageableComponent _pagingInfo;
    private List<Datahub_Project> _pagedProjects => _pagingInfo != null ? _projects?.Skip(_pagingInfo.Page * _pagingInfo.PageSize).Take(_pagingInfo.PageSize).ToList() : new List<Datahub_Project>();

    private List<Datahub_Project> _projects;
    private List<Datahub_Project> _featured;
    private DatahubProjectDBContext _context;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
            StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        _context = await _dbFactory.CreateDbContextAsync();
        _projects = _context.Projects.Where(p =>
            (p.Project_Status_Desc == Datahub_Project.ONGOING || p.Is_Featured) &&
            !p.Is_Private && !string.IsNullOrWhiteSpace(p.Project_Acronym_CD)
            && !string.IsNullOrWhiteSpace(p.Project_Name)).Include(p => p.Users).ToList();
        _featured = _projects.Where(p => p.Is_Featured).ToList();


        _pagingInfo = new PagingInfo()
        {
            Page = 0,
            PageSize = 4,
            Total = _projects.Count
        };
    }

    public void Dispose()
    {
        _context.Dispose();
    }

}