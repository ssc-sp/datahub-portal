@using global::Datahub.Core.EFCore
@using global::Datahub.Core.Services
@using global::Datahub.Portal.Data
@using global::Datahub.Portal.Services

@inject IPowerBiDataService _powerBiDataService
@inject PowerBiServiceApi _powerBiServiceApi
@inject Microsoft.Identity.Web.MicrosoftIdentityConsentAndConditionalAccessHandler _consentHandler

@inject IDbContextFactory<DatahubProjectDBContext> _contextFactory;

@if (Datasets != null && Datasets.Count > 0)
{
    <AeFlex Vertical> 
        <AePaginatedTable 
            Accessors=@DatasetTableAccessors
            Dataset=@Datasets
            @ref=@DatasetTablePageable
            Page=@DatasetTableCurrentPage
            Renderers=@DatasetTableRenderers
            Headers=@LocalizeHeaders(DatasetTableHeaderKeys)
            PageSize=@PageSize
            GridTemplateColumns="3fr 3fr 5fr 1fr"
        />

        <AePagination Pageable=@DatasetTablePageable OnPageClick=@DatasetTablePaginationClicked>
            <LeftIcon><i class='fad fa-chevron-double-left'></i></LeftIcon> 
            <RightIcon><i class='fad fa-chevron-double-right'></i></RightIcon>
        </AePagination>
    </AeFlex>
}

@code {

    [Parameter]
    public int PageSize { get; set; } = 10;

    [Parameter]
    public List<PowerBiAdminDataSetItem> Datasets { get; set; }

    [Parameter]
    public List<PowerBiAdminWorkspaceItem> Workspaces { get; set; }

    [Parameter]
    public EventCallback OnUpdated { get; set; }

    public Dictionary<Guid, PowerBiAdminWorkspaceItem> WorkspacesDict => Workspaces.ToDictionary(w => w.WorkspaceId);

    private Timer _updateTimer;

    private IPageableComponent DatasetTablePageable { get; set; }
    private int DatasetTableCurrentPage = 0;

    private List<Func<PowerBiAdminDataSetItem, string>> DatasetTableAccessors = new()
    {
        w => w.DatasetName,
        w => w.WorkspaceId.ToString(),
        w => w.WorkspaceId.ToString(),
        w => w.IsChanged.ToString()
    };

    private List<Func<PowerBiAdminDataSetItem, RenderFragment>> DatasetTableRenderers;

    private List<string> DatasetTableHeaderKeys = new()
    {
        "Dataset", "Workspace", "Project", "Add/Update"
    };

    private List<string> LocalizeHeaders(List<string> input) => input.Select(s => Localizer[s].ToString()).ToList();

    private void DatasetTablePaginationClicked(int pageIndex)
    {
        DatasetTableCurrentPage = pageIndex;
    }

    private RenderFragment CatalogueIndicatorRenderFragment(PowerBiAdminDataSetItem w) => @<input type="checkbox" @bind=@w.IsChanged />;

    private async Task SetupRenderers()
    {
        DatasetTableAccessors = new()
        {
            w => w.DatasetName,
            w => WorkspacesDict.GetValueOrDefault(w.WorkspaceId)?.WorkspaceName ?? string.Empty,
            w => WorkspacesDict.GetValueOrDefault(w.WorkspaceId)?.ProjectName ?? string.Empty,
            w => w.IsChanged.ToString()
        };

        DatasetTableRenderers = new()
        {
            null,
            null,
            null,
            CatalogueIndicatorRenderFragment
        };

        await Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await SetupRenderers();
    }

}
