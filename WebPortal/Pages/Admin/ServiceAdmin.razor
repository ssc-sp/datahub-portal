@inject IUserInformationService _userInformationService
@inject ServiceAuthManager _serviceAuthManager

@page "/admin/services"

<DHPageTitle PageTitleKey=@Localizer[$"{ADMIN_SECTION_LOCALIZATION_PREFIX}.ServiceAdmin"] />

<MudText Typo=Typo.h3>@Localizer[$"{ADMIN_SECTION_LOCALIZATION_PREFIX}.ServiceAdmin"]</MudText>

<AuthorizeView Roles=@RoleConstants.DATAHUB_ROLE_ADMIN>
    <CascadingValue Value="CurrentUserId" Name="UserId">
        <CascadingValue Value="IsDataHubAdmin" Name="IsDatahubAdmin">
            <CascadingValue Value="CurrentUserEmail" Name="CurrentUserEmail">
                <MudTabs>
                    <MudTabPanel Text=@Localizer[$"{ADMIN_SECTION_LOCALIZATION_PREFIX}.ServiceCreationRequests"]>
                        <Datahub.Portal.Pages.Admin.Requests.ServiceCreationRequestTable />
                    </MudTabPanel>
                </MudTabs>
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</AuthorizeView>

<MudText>
    <MudLink Href="/administration">@Localizer[$"{ADMIN_LOCALIZATION_PREFIX}.ReturnToAdmin"]</MudLink>
</MudText>

@code {

    private const string ADMIN_LOCALIZATION_PREFIX = "ADMINISTRATION";
    private const string ADMIN_SECTION_LOCALIZATION_PREFIX = $"{ADMIN_LOCALIZATION_PREFIX}.SECTIONS";

    private System.Security.Claims.ClaimsPrincipal _user;
    private string CurrentUserId { get; set; }
    private string CurrentUserName { get; set; }
    private string CurrentUserEmail { get; set; }
    private bool IsDataHubAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _user = await _userInformationService.GetAuthenticatedUser();

        CurrentUserId = await _userInformationService.GetUserIdString();
        CurrentUserEmail = _user.Identity?.Name;
        CurrentUserName = _user.Claims.FirstOrDefault(c => c.Type == "name")?.Value;
        IsDataHubAdmin = _user.IsInRole(RoleConstants.DATAHUB_ROLE_ADMIN);

    }


}
