@use '../common/' as c;

$tabControlDeletable: (
  'margin-left': 0.5rem,
  'transition': all 0.2s c.$cubic-bezier,
  'opacity': 0.5,
  '&:hover': (
    'opacity': 1,
    'transform': scale(1.1),
  ),
);

$tabControlDisabled: (
  'opacity': 0.5,
  'cursor': not-allowed,
);

$tabControlOptions: (
  'display': inline-flex,
  'flex-wrap': wrap,
  'cursor': pointer,
  'padding': 1rem,
  'margin-bottom': 1rem,
  'border-bottom': 2px solid #{c.$transparent},
  'transition': all 0.2s c.$cubic-bezier,
  'user-select': not-allowed,
  '&.active': (
    'border-bottom-color': c.$blue-400,
  ),
  '&:hover': (
    'background-color': c.$grey-200,
  ),
);

$tabWrapperOptions: ();

$tabContentOptions: ();

@mixin configure($options) {
  @if ($options) {
    @if (map.get($options, 'tabControlOptions')) {
      $tabControlOptions: map.get($options, 'tabControlOptions') !global;
    }
    @if (map.get($options, 'tabControlDeletable')) {
      $tabControlDeletable: map.get($options, 'tabControlDeletable') !global;
    }
    @if (map.get($options, 'tabControlDisabled')) {
      $tabControlDisabled: map.get($options, 'tabControlDisabled') !global;
    }
    @if (map.get($options, 'tabWrapperOptions')) {
      $tabWrapperOptions: map.get($options, 'tabWrapperOptions') !global;
    }
    @if (map.get($options, 'tabContentOptions')) {
      $tabContentOptions: map.get($options, 'tabContentOptions') !global;
    }
  }
}

@mixin styles {
  .ae.tab-wrapper {
    @include c.set-values($tabWrapperOptions);

    .ae.tab {
      @include c.set-values($tabControlOptions);

      &.disable {
        @include c.set-values($tabControlDisabled);
      }
    }

    .tab-deletable {
      @include c.set-values($tabControlDeletable);
    }
  }

  .ae.tabpage {
    @include c.set-values($tabContentOptions);
  }
}
