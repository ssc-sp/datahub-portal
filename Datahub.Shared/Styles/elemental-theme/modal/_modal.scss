@use '../common' as c;
@use 'error-modal';
@use 'sass:map';

$modalOptions: (
  'default': (
    'z-index': 99,
    'position': fixed,
    'display': block,
    'border': none,
    'width': 100%,
    'height': 100%,
    'transition': all 0.3s c.$cubic-bezier,
    '&.hidden': (
      'display': none,
    ),
    '.ae.modal-background': (
      'z-index': -1,
      'position': fixed,
      'width': 100%,
      'height': 100%,
      'background-color': rgba(0, 0, 0, 0.2),
    ),
    '.ae.modal-wrapper': (
      'background-color': c.$white,
      'padding': 0.5rem 1rem,
      'position': absolute,
      'top': 50%,
      'left': 50%,
      'transform': translate(-50%, -50%),
      'color': c.$grey-800,
      'border-color': c.$grey-600,
      'border-radius': 2px,
      'line-height': 1.5,
      'font-size': 0.8rem,
      'font-weight': 400,
      'white-space': nowrap,
      'text-align': center,
      'min-width': 20rem,
      'min-height': 10rem,
      'box-shadow': c.$box-shadow-1,
      '.ae.modal-title': (
        'font-size': 1.5rem,
        'padding': 0.5rem,
      ),
      '.ae.modal-body': (
        'padding': 0.5rem,
        'text-align': left,
      ),
      '.ae.modal-footer': (
        'padding': 0.5rem,
        'text-align': right,
      ),
    ),
  ),
);

@mixin configure($options) {
  @if ($options) {
    @if (map.get($options, 'modalOptions')) {
      $modalOptions: map.get($options, 'modalOptions') !global;
    }
    @if (map.get($options, 'errorModalOptions')) {
      @include error-modal.configure(map.get($options, 'errorModalOptions'));
    }
  }
}

@mixin styles {
  .ae.modal {
    @include c.set-variations($modalOptions);

    @include error-modal.styles;
  }
}
