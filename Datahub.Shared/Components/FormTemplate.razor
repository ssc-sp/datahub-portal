@inject IStringLocalizer DataLocalizer
@using NRCan.Datahub.Shared.Data
@typeparam T
@inherits HtmlElement
@using System.Reflection


<h1>@Metadata.Header</h1>
<h2>@Metadata.SubHeader</h2>


<AeCard class="facardForms" CardPosition="AeCard.CardStyle.Horizontal">
<AePaginatedTable 
         T="@T"
         Accessors="Metadata.AccessorFunctions.ToList()"
         Dataset="Metadata.DataSet.ToList()"
         ColorAccessor="getColor"
         Headers="Metadata.Headers.ToList()"
         GridTemplateColumns="4fr 8fr"
         MaxHeight="400"
         OnRowClick="@SetFormEdit" 
         Page="@_lastClicked"
         PageSize="10"
         @ref=_myTable />

        <AePagination Pageable="@_myTable" OnPageClick="OnPageClick" /> 

        <AeFlex id="buttonBar">
        <div class="icon-container" style="margin-bottom: 10px; margin-left: 5px;">
            <FAButton Text="Add New" Icon="far fa-plus-square" onclick="CreateNewRecord" />
        </div>
    </AeFlex>
</AeCard>


@if (SelectedRecord != null)
{    
    <AeCard class="facardForms" CardPosition="AeCard.CardStyle.Horizontal">
    <AeModelForm Model="SelectedRecord"
                 T="@T"
                 OnValidSubmit="HandleSubmit"
                 OnCancel="ClearForm"
                 OnConfigure="OnConfigure"
                 CancelLabel="Cancel"
                 SubmitLabel="Save"
                 OnChange="OnChange"
                 LabelForPropertyFunc="@GetDataLabel"
                 LabelsOnTop="true"/>
    </AeCard>


@*    <AeFlex id="buttonBar">
        <div class="icon-container" style="margin-bottom: 10px; margin-left: 5px;">
            <FAButton Text="Budgets" Icon="fal fa-arrow-right" IconLocation="right" onclick="e => GoToNextSheet()" />
        </div>
    </AeFlex>*@
}

@code {

    [Parameter]
    public FormMetadata<T> Metadata { get; set; }
    [Parameter]
    public EventCallback HandleSubmit { get; set; }
    [Parameter]
    public EventCallback<IModelFormContext> OnConfigureForms { get; set; }
    [Parameter]
    public EventCallback<ModelFormChangeArgs> OnChangeForms { get; set; }
    [Parameter]
    public EventCallback CreateNewRecord { get; set; }
    [Parameter]
    public T SelectedRecord { get; set; }
    [Parameter]
    public EventCallback<T> SetFormEditRecord { get; set; }

    private int _lastClicked = 0;
    private IPageableComponent _myTable;

    private void OnPageClick(int pageIndex)
    {
        _lastClicked = pageIndex;
    }

    private async Task SetFormEdit(T selectedRecord)
    {

        await SetFormEditRecord.InvokeAsync(selectedRecord);

    }
    
    private async Task OnConfigure(IModelFormContext context)
    {        
        if (context != null)
        {
            await OnConfigureForms.InvokeAsync(context);            
        }        
    }

    private async Task OnChange(ModelFormChangeArgs args)
    {        
        if (args != null)
        {
            await OnChangeForms.InvokeAsync(args);            
        }        
    }

    private async Task<T> ClearForm()
    {
        SelectedRecord = default(T);
        StateHasChanged();    
        return default(T);
    }

    private string GetDataLabel(string propName)
    {
        return DataLocalizer[propName];
    }

}
