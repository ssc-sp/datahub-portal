@using Datahub.Core.Components.Resources
@using Datahub.Core.EFCore;
@using Datahub.ProjectTools.Services;
@inject RequestManagementService _requestManagementService
@inject NavigationManager NavigationManager

<ToolCard
        Title="@Localizer["Azure Databricks"]"
        Description="@Localizer["Run your Python, R and SQL notebooks in the cloud with Databricks for analytics, machine learning and data pipelines"]">
        <Logo>
            <img src="/icons/svg/databricks.svg" alt="Databricks">
        </Logo>
        <ToolActionsList>
            <ul>
                @if (!string.IsNullOrWhiteSpace(Project.Databricks_URL))
                {
                    <li>                                
                        <DHLink DataProject="@(Project.Project_Acronym_CD)" DatabricksURL="@Project.Databricks_URL">
                            <ToolActionButton LinkType="LinkType.External">
                                    @Localizer["Open Azure Databricks"]
                            </ToolActionButton>
                        </DHLink>
                    </li>
                    <li>
                        <AeButton class="light" OnClickEvent="HandleEditMetadata">@Localizer["Edit Metadata"]</AeButton>
                    </li>
                }
                else
                {
                    if (_databricksServiceRequested)
                    {
                        <li>
                            <MudText class="access-text">@Localizer["Service Request is being reviewed"]</MudText>
                        </li>
                    }
                    else
                    {
                        <li>
                            <ToolActionButton LinkType="_databricksServiceRequestPending ? LinkType.Pending : LinkType.Request" OnClick="@HandleRequestService">
                                @Localizer["Request Service Creation"]
                            </ToolActionButton>
                        </li>
                    }
                }
            </ul>
        </ToolActionsList>
    </ToolCard>

@code {

    [Parameter]
    public RequestManagementService RequestManagementService { get; set; }

    [Parameter]
    public Datahub_Project Project { get; set; }

    private bool _databricksServiceRequested;
    private bool _databricksServiceRequestPending;

    private async Task HandleRequestService()
    {
        if (_databricksServiceRequestPending)
            return;

        _databricksServiceRequestPending = true;
        StateHasChanged();


        await RequestManagementService.HandleRequestService(Project, RequestManagementService.DATABRICKS);
        _databricksServiceRequested = true;
    }

    private void HandleEditMetadata()
    {
        NavigationManager.NavigateTo($"/admin/databricks/metadata/{Project.Project_Acronym_CD}");
    }
}