# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

variables:
  target_os: win-x64
  version.MajorMinor: 2.0
  version.Revision: $[counter(variables['version.MajorMinor'], 0)]
  system.debug: true.

pool:
  vmImage: ubuntu-latest

steps:
- script: echo FSDH - Building Desktop Uploader
  displayName: 'FSDH - Building Desktop Uploader'

- task: Bash@3
  displayName: Install .NET MAUI
  inputs:
    targetType: 'inline'
    script: |
      dotnet nuget locals all --clear 
      dotnet workload install maui wasm-tools --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

- task: DotNetCoreCLI@2
  displayName: dotnet workload restore
  inputs:
    command: custom
    custom: workload restore
    projects: "**/Desktop.Uploader.csproj"
    workingDirectory: $(Build.SourcesDirectory)

- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: "**/Desktop.Uploader.csproj"
    workingDirectory: $(Build.SourcesDirectory)

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: Desktop\Desktop.Uploader\*.csproj
    arguments: --configuration $(BuildConfiguration)
    workingDirectory: $(Build.SourcesDirectory)

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    projects: Desktop\Desktop.Uploader\Desktop.Uploader.csproj
    arguments: --output $(Build.ArtifactStagingDirectory) -r $(target_os) --self-contained true
    zipAfterPublish: True
    
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'fsdh-desktop-uploader'