# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

variables:
  target_os: win-x64
  version.MajorMinor: 2.0
  version.Revision: $[counter(variables['version.MajorMinor'], 0)]
  system.debug: False

pool:
  vmImage: windows-latest

steps:
- script: echo FSDH - Building Desktop Uploader
  displayName: 'FSDH - Building Desktop Uploader'

- task: Bash@3
  displayName: Install .NET MAUI
  inputs:
    targetType: 'inline'
    script: |
        dotnet --version
        dotnet nuget locals all --clear
        dotnet workload install maui --source https://aka.ms/dotnet7/nuget/index.json --source https://api.nuget.org/v3/index.json
        dotnet workload install android ios maccatalyst tvos macos maui wasm-tools maui-maccatalyst --source https://aka.ms/dotnet7/nuget/index.json --source https://api.nuget.org/v3/index.json
        dotnet workload list

# https://docs.microsoft.com/en-us/dotnet/maui/windows/deployment/overview
- task: PowerShell@2
  displayName: 'dotnet publish Windows MSIX'
  inputs:
    targetType: 'inline'
    script: |
      cd $(Build.SourcesDirectory)/Desktop/Desktop.Uploader
      dotnet publish -f net7.0-windows10.0.22621 -c Release -o $(Build.ArtifactStagingDirectory)
    
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'fsdh-desktop-uploader'

- task: DotNetCoreCLI@2
  displayName: 'Install Azure SignTool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global AzureSignTool'

- task: AzureKeyVault@2
  displayName: "Get devops client ID and secret"
  inputs:
      azureSubscription: ${env:az_subscription}
      KeyVaultName: ${env:kv_name}
      SecretsFilter: "devops*"
      RunAsPreJob: True
- task: PowerShell@2
  displayName: 'Sign the package'
  inputs:
    targetType: 'inline'
    script: |
        & AzureSignTool sign -kvu ${env:cert_kv_url} -kvc ${env:cert_name} -kvi $(devops-client-id) -kvs $(devops-client-secret) -v "$(Build.ArtifactStagingDirectory)\*.msix"
